{"version":3,"file":"node_modules_web3auth_phantom-adapter_dist_phantomAdapter_esm_js.index.js","mappings":"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","sources":["webpack://annotation/./node_modules/@web3auth/phantom-adapter/src/utils.ts","webpack://annotation/./node_modules/@web3auth/phantom-adapter/src/phantomAdapter.ts","webpack://annotation/ignored|/Users/hongsunbeom/Desktop/XREAL/DApp/annotation/node_modules/@solana/web3.js/node_modules/bn.js/lib|buffer","webpack://annotation/ignored|/Users/hongsunbeom/Desktop/XREAL/DApp/annotation/node_modules/@toruslabs/tweetnacl-js|crypto","webpack://annotation/ignored|/Users/hongsunbeom/Desktop/XREAL/DApp/annotation/node_modules/borsh/node_modules/bn.js/lib|buffer","webpack://annotation/ignored|/Users/hongsunbeom/Desktop/XREAL/DApp/annotation/node_modules/ethereumjs-util/node_modules/bn.js/lib|buffer","webpack://annotation/ignored|/Users/hongsunbeom/Desktop/XREAL/DApp/annotation/node_modules/tweetnacl|crypto"],"sourcesContent":["import type { IPhantomWalletProvider } from \"@web3auth/solana-provider\";\n\nexport function poll(callback: () => boolean | Promise<boolean>, interval: number, count: number): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    if (count > 0) {\n      setTimeout(async () => {\n        const done = await callback();\n        if (done) resolve(done);\n        if (!done)\n          poll(callback, interval, count - 1)\n            .then((res) => {\n              resolve(res);\n              return res;\n            })\n            .catch((err) => reject(err));\n      }, interval);\n    } else {\n      resolve(false);\n    }\n  });\n}\n\nexport const detectProvider = async (\n  options: { interval: number; count: number } = { interval: 1000, count: 3 }\n): Promise<IPhantomWalletProvider | null> => {\n  const isPhantomAvailable = typeof window !== \"undefined\" && !!(window as any).solana?.isPhantom;\n  if (isPhantomAvailable) {\n    return (window as any).solana;\n  }\n  const isAvailable = await poll(() => (window as any).solana?.isPhantom, options.interval, options.count);\n  if (isAvailable) return (window as any).solana;\n  return null;\n};\n","import {\n  ADAPTER_CATEGORY,\n  ADAPTER_CATEGORY_TYPE,\n  ADAPTER_EVENTS,\n  ADAPTER_NAMESPACES,\n  ADAPTER_STATUS,\n  ADAPTER_STATUS_TYPE,\n  AdapterInitOptions,\n  AdapterNamespaceType,\n  BaseAdapter,\n  CHAIN_NAMESPACES,\n  ChainNamespaceType,\n  CONNECTED_EVENT_DATA,\n  CustomChainConfig,\n  getChainConfig,\n  log,\n  SafeEventEmitterProvider,\n  UserInfo,\n  WALLET_ADAPTERS,\n  WalletInitializationError,\n  WalletLoginError,\n  Web3AuthError,\n} from \"@web3auth/base\";\nimport { IPhantomWalletProvider, PhantomInjectedProvider } from \"@web3auth/solana-provider\";\n\nimport { detectProvider } from \"./utils\";\nexport interface PhantomAdapterOptions {\n  chainConfig?: CustomChainConfig;\n}\n\nexport class PhantomAdapter extends BaseAdapter<void> {\n  readonly name: string = WALLET_ADAPTERS.PHANTOM;\n\n  readonly adapterNamespace: AdapterNamespaceType = ADAPTER_NAMESPACES.SOLANA;\n\n  readonly currentChainNamespace: ChainNamespaceType = CHAIN_NAMESPACES.SOLANA;\n\n  readonly type: ADAPTER_CATEGORY_TYPE = ADAPTER_CATEGORY.EXTERNAL;\n\n  public status: ADAPTER_STATUS_TYPE = ADAPTER_STATUS.NOT_READY;\n\n  public _wallet: IPhantomWalletProvider | null = null;\n\n  private phantomProvider: PhantomInjectedProvider | null = null;\n\n  private rehydrated = false;\n\n  constructor(options: PhantomAdapterOptions = {}) {\n    super();\n    this.chainConfig = options.chainConfig || null;\n  }\n\n  get isWalletConnected(): boolean {\n    return !!(this._wallet?.isConnected && this.status === ADAPTER_STATUS.CONNECTED);\n  }\n\n  get provider(): SafeEventEmitterProvider | null {\n    return this.phantomProvider?.provider || null;\n  }\n\n  set provider(_: SafeEventEmitterProvider | null) {\n    throw new Error(\"Not implemented\");\n  }\n\n  setAdapterSettings(_: unknown): void {}\n\n  async init(options: AdapterInitOptions): Promise<void> {\n    super.checkInitializationRequirements();\n    // set chainConfig for mainnet by default if not set\n    if (!this.chainConfig) {\n      this.chainConfig = getChainConfig(CHAIN_NAMESPACES.SOLANA, \"0x1\");\n    }\n    this._wallet = await detectProvider({ interval: 500, count: 3 });\n    if (!this._wallet) throw WalletInitializationError.notInstalled();\n    this.phantomProvider = new PhantomInjectedProvider({ config: { chainConfig: this.chainConfig as CustomChainConfig } });\n    this.status = ADAPTER_STATUS.READY;\n    this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.PHANTOM);\n\n    try {\n      log.debug(\"initializing phantom adapter\");\n      if (options.autoConnect) {\n        this.rehydrated = true;\n        await this.connect();\n      }\n    } catch (error) {\n      log.error(\"Failed to connect with cached phantom provider\", error);\n      this.emit(\"ERRORED\", error);\n    }\n  }\n\n  async connect(): Promise<SafeEventEmitterProvider | null> {\n    try {\n      super.checkConnectionRequirements();\n      this.status = ADAPTER_STATUS.CONNECTING;\n      this.emit(ADAPTER_EVENTS.CONNECTING, { adapter: WALLET_ADAPTERS.PHANTOM });\n\n      if (!this._wallet) throw WalletInitializationError.notInstalled();\n      if (!this._wallet.isConnected) {\n        const handleDisconnect = this._wallet._handleDisconnect;\n        try {\n          await new Promise<SafeEventEmitterProvider | null>((resolve, reject) => {\n            const connect = async () => {\n              await this.connectWithProvider(this._wallet as IPhantomWalletProvider);\n              resolve(this.provider);\n            };\n            if (!this._wallet) return reject(WalletInitializationError.notInstalled());\n            this._wallet.once(\"connect\", connect);\n            // Raise an issue on phantom that if window is closed, disconnect event is not fired\n            (this._wallet as IPhantomWalletProvider)._handleDisconnect = (...args: unknown[]) => {\n              reject(WalletInitializationError.windowClosed());\n              return handleDisconnect.apply(this._wallet, args);\n            };\n\n            this._wallet.connect().catch((reason: unknown) => {\n              reject(reason);\n            });\n          });\n        } catch (error: unknown) {\n          if (error instanceof Web3AuthError) throw error;\n          throw WalletLoginError.connectionError((error as Error)?.message);\n        } finally {\n          this._wallet._handleDisconnect = handleDisconnect;\n        }\n      } else {\n        await this.connectWithProvider(this._wallet);\n      }\n\n      if (!this._wallet.publicKey) throw WalletLoginError.connectionError();\n      this._wallet.on(\"disconnect\", this._onDisconnect);\n\n      return this.provider;\n    } catch (error: unknown) {\n      // ready again to be connected\n      this.status = ADAPTER_STATUS.READY;\n      this.rehydrated = false;\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n      throw error;\n    }\n  }\n\n  async disconnect(options: { cleanup: boolean } = { cleanup: false }): Promise<void> {\n    if (!this.isWalletConnected) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    try {\n      await this._wallet?.disconnect();\n      if (options.cleanup) {\n        this.status = ADAPTER_STATUS.NOT_READY;\n        this.phantomProvider = null;\n        this._wallet = null;\n      }\n      this.emit(ADAPTER_EVENTS.DISCONNECTED);\n    } catch (error: unknown) {\n      this.emit(ADAPTER_EVENTS.ERRORED, WalletLoginError.disconnectionError((error as Error)?.message));\n    }\n  }\n\n  async getUserInfo(): Promise<Partial<UserInfo>> {\n    if (!this.isWalletConnected) throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n    return {};\n  }\n\n  private async connectWithProvider(injectedProvider: IPhantomWalletProvider): Promise<SafeEventEmitterProvider | null> {\n    if (!this.phantomProvider) throw WalletLoginError.connectionError(\"No phantom provider\");\n    await this.phantomProvider.setupProvider(injectedProvider);\n    this.status = ADAPTER_STATUS.CONNECTED;\n    this.emit(ADAPTER_EVENTS.CONNECTED, { adapter: WALLET_ADAPTERS.PHANTOM, reconnected: this.rehydrated } as CONNECTED_EVENT_DATA);\n    return this.provider;\n  }\n\n  private _onDisconnect = () => {\n    if (this._wallet) {\n      this._wallet.off(\"disconnect\", this._onDisconnect);\n      this.rehydrated = false;\n      // ready to be connected again only if it was previously connected and not cleaned up\n      this.status = this.status === ADAPTER_STATUS.CONNECTED ? ADAPTER_STATUS.READY : ADAPTER_STATUS.NOT_READY;\n      this.emit(ADAPTER_EVENTS.DISCONNECTED);\n    }\n  };\n}\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"names":["poll","callback","interval","count","Promise","resolve","reject","setTimeout","done","then","res","catch","err","detectProvider","options","isPhantomAvailable","window","solana","isPhantom","isAvailable","PhantomAdapter","BaseAdapter","constructor","WALLET_ADAPTERS","PHANTOM","ADAPTER_NAMESPACES","SOLANA","CHAIN_NAMESPACES","ADAPTER_CATEGORY","EXTERNAL","ADAPTER_STATUS","NOT_READY","_wallet","off","_onDisconnect","rehydrated","status","CONNECTED","READY","emit","ADAPTER_EVENTS","DISCONNECTED","chainConfig","isWalletConnected","isConnected","provider","phantomProvider","_","Error","setAdapterSettings","init","checkInitializationRequirements","getChainConfig","WalletInitializationError","notInstalled","PhantomInjectedProvider","config","log","debug","autoConnect","connect","error","checkConnectionRequirements","CONNECTING","adapter","handleDisconnect","_handleDisconnect","connectWithProvider","once","windowClosed","args","apply","reason","Web3AuthError","WalletLoginError","connectionError","message","publicKey","on","ERRORED","disconnect","cleanup","notConnectedError","disconnectionError","getUserInfo","injectedProvider","setupProvider","reconnected"],"sourceRoot":""}