{"version":3,"file":"vendors-node_modules_web3auth_phantom-adapter_dist_phantomAdapter_esm_js.index.js","mappings":";;;;;;;;;;;;;;;;;;;AAcM,MAAgBA,iBAAhB,SAA6CC,uDAA7C,CAA2D;AACzC,QAAhBC,gBAAgB;AAAA;;AACpB,QAAI,CAAC,IAAKC,CAAAA,QAAN,IAAkB,uBAAC,KAAKC,WAAN,8CAAC,iBAAkBC,CAAAA,OAAnB,CAAtB,EAAkD,MAAMC,8EAAA,EAAN;IAElD,MAAM;MAAEE,cAAF;AAAkBH,MAAAA,OAAAA;AAAlB,QAA8B,KAAKD,WAAzC;AAEA,QAAI,IAAKK,CAAAA,MAAL,KAAgBC,oEAApB,EAA8C,MAAMJ,8EAAA,CAAmC,uDAAnC,CAAN;AAC9C,UAAMM,QAAQ,GAAG,MAAM,KAAKT,QAAL,CAAcU,OAAd,CAAgC;AACrDC,MAAAA,MAAM,EAAE;AAD6C,KAAhC,CAAvB;;AAGA,QAAIF,QAAQ,IAAIA,QAAQ,CAACG,MAAT,GAAkB,CAAlC,EAAqC;MACnC,MAAMC,aAAa,GAAGC,6DAAa,CAACL,QAAQ,CAAC,CAAD,CAAT,EAAwB,IAAKM,CAAAA,IAA7B,CAAnC;;AACA,UAAIF,aAAJ,EAAmB;AACjB,cAAMG,SAAS,GAAGC,qEAAqB,CAACJ,aAAD,CAAvC;;QACA,IAAI,CAACG,SAAL,EAAgB;UACd,OAAO;AAAEE,YAAAA,OAAO,EAAEL,aAAAA;WAAlB;AACD;AACF;;AAED,YAAMM,OAAO,GAAG;AACdC,QAAAA,MAAM,EAAEC,MAAM,CAACC,QAAP,CAAgBC,MADV;AAEdC,QAAAA,GAAG,EAAEH,MAAM,CAACC,QAAP,CAAgBG,IAFP;AAGdC,QAAAA,OAAO,EAAEjB,QAAQ,CAAC,CAAD,CAHH;AAIdP,QAAAA,OAAO,EAAEyB,QAAQ,CAACzB,OAAD,EAAU,EAAV,CAJH;AAKd0B,QAAAA,OAAO,EAAE,GALK;AAMdC,QAAAA,KAAK,EAAEC,IAAI,CAACC,MAAL,EAAcC,CAAAA,QAAd,CAAuB,EAAvB,CAA2BC,CAAAA,KAA3B,CAAiC,CAAjC,CANO;AAOdC,QAAAA,QAAQ,EAAE,IAAIC,IAAJ,GAAWC,WAAX;OAPZ;MAUA,MAAMC,SAAS,GAAG,MAAMC,6DAAa,CAACnB,OAAD,EAAUd,cAAV,CAArC;MACA,MAAMkC,cAAc,GAAG,IAAIC,WAAJ,GAAkBC,MAAlB,CAAyBJ,SAAzB,CAAvB;AACA,YAAMK,aAAa,GAAG,MAAM,KAAK1C,QAAL,CAAcU,OAAd,CAAkC;AAC5DC,QAAAA,MAAM,EAAE,aADoD;AAE5DgC,QAAAA,MAAM,EAAE;AACNC,UAAAA,OAAO,EAAEL,cADH;AAENM,UAAAA,OAAO,EAAE;AAFH;AAFoD,OAAlC,CAA5B;MAOA,MAAM3B,OAAO,GAAG,MAAM4B,qEAAqB,CAACzC,cAAD,EAAiB0C,kDAAA,CAAYL,aAAZ,CAAjB,EAA2DL,SAA3D,EAAsE,KAAKtB,IAA3E,EAAiF,IAAKiC,CAAAA,WAAtF,CAA3C;MACAC,yDAAS,CAACxC,QAAQ,CAAC,CAAD,CAAT,EAAwB,IAAKM,CAAAA,IAA7B,EAAmCG,OAAnC,CAAT;MACA,OAAO;AACLA,QAAAA,OAAAA;OADF;AAGD;;AACD,UAAMf,8EAAA,CAAmC,uDAAnC,CAAN;AACD;;AAEe,QAAV+C,UAAU;AACd,QAAI,IAAK5C,CAAAA,MAAL,KAAgBC,oEAApB,EAA8C,MAAMJ,+EAAA,CAAoC,2BAApC,CAAN;AAC9C,UAAMM,QAAQ,GAAG,MAAM,KAAKT,QAAL,CAAcU,OAAd,CAAgC;AACrDC,MAAAA,MAAM,EAAE;AAD6C,KAAhC,CAAvB;;AAGA,QAAIF,QAAQ,IAAIA,QAAQ,CAACG,MAAT,GAAkB,CAAlC,EAAqC;MACnCwC,0DAAU,CAAC3C,QAAQ,CAAC,CAAD,CAAT,EAAc,KAAKM,IAAnB,CAAV;AACD;AACF;;AAvD8D;;;;;;;;;;;;;;ACdrD;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA,kBAAkB,qBAAqB;AACvC;AACA;AACA,kBAAkB,qBAAqB;AACvC;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA,2CAA2C;AAC3C,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,6CAA6C;AAC5E;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY,SAAS;AAChC;AACA;AACA;AACA,sCAAsC;AACtC,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA,+BAA+B,6CAA6C;AAC5E;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACxHA,cAAc,mBAAO,CAAC,6FAAQ;AAC9B;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;SCDgBsC,KAAKC,UAA4CC,UAAkBC,OAAa;AAC9F,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAoB;IACrC,IAAIH,KAAK,GAAG,CAAZ,EAAe;AACbI,MAAAA,UAAU,CAAC,YAAW;AACpB,cAAMC,IAAI,GAAG,MAAMP,QAAQ,EAA3B;AACA,YAAIO,IAAJ,EAAUH,OAAO,CAACG,IAAD,CAAP;AACV,YAAI,CAACA,IAAL,EACER,IAAI,CAACC,QAAD,EAAWC,QAAX,EAAqBC,KAAK,GAAG,CAA7B,CAAJ,CACGM,IADH,CACSC,GAAD,IAAQ;UACZL,OAAO,CAACK,GAAD,CAAP;AACA,iBAAOA,GAAP;SAHJ,EAKGC,KALH,CAKUC,GAAD,IAASN,MAAM,CAACM,GAAD,CALxB;OAJM,EAUPV,QAVO,CAAV;AAWD,KAZD,MAYO;MACLG,OAAO,CAAC,KAAD,CAAP;AACD;AACF,GAhBM,CAAP;AAiBD;AAEM,MAAMQ,cAAc,GAAG,kBAEc;AAAA;;AAAA,MAD1CC,OAC0C,GADK;AAAEZ,IAAAA,QAAQ,EAAE,IAAZ;AAAkBC,IAAAA,KAAK,EAAE;GAC9B;AAC1C,QAAMY,kBAAkB,GAAG,OAAO/C,MAAP,KAAkB,WAAlB,IAAiC,CAAC,oBAAEA,MAAc,CAACgD,MAAjB,MAAE,oDAAuBC,SAAzB,CAA7D;;AACA,MAAIF,kBAAJ,EAAwB;IACtB,OAAQ/C,MAAc,CAACgD,MAAvB;AACD;;AACD,QAAME,WAAW,GAAG,MAAMlB,IAAI,CAAC;AAAA;;AAAA,8BAAOhC,MAAc,CAACgD,MAAtB,oDAAO,gBAAuBC,SAA9B;GAAD,EAA0CH,OAAO,CAACZ,QAAlD,EAA4DY,OAAO,CAACX,KAApE,CAA9B;AACA,MAAIe,WAAJ,EAAiB,OAAQlD,MAAc,CAACgD,MAAvB;AACjB,SAAO,IAAP;AACD,CAVM;;ACSD,MAAOG,cAAP,SAA8B3E,4EAA9B,CAAqD;AAiBzD4E,EAAAA,WAAA,GAA+C;IAAA,IAAnCN,OAAmC,uEAAF,EAAE;AAC7C;;IAD6C,iFAhBvBO,CAAAA,IAAAA,EAAAA,MAAAA,EAAAA,mEAgBuB;;IAAA,iFAdGE,CAAAA,IAAAA,EAAAA,kBAAAA,EAAAA,qEAcH;;IAAA,iFAZME,CAAAA,IAAAA,EAAAA,uBAAAA,EAAAA,mEAYN;;IAAA,iFAVRC,CAAAA,IAAAA,EAAAA,MAAAA,EAAAA,qEAUQ;;IAAA,iFARVxE,CAAAA,IAAAA,EAAAA,QAAAA,EAAAA,oEAQU;;AAAA,uGANC,IAMD;;AAAA,+GAJW,IAIX;;AAAA,0GAF1B,KAE0B;;AAAA,6GA+HvB,MAAK;MAC3B,IAAI,KAAK2E,OAAT,EAAkB;AAChB,aAAKA,OAAL,CAAaC,GAAb,CAAiB,YAAjB,EAA+B,KAAKC,aAApC;;AACA,aAAKC,UAAL,GAAkB,KAAlB,CAFgB;;AAIhB,aAAK/E,MAAL,GAAc,IAAKA,CAAAA,MAAL,KAAgBC,oEAAhB,GAA2CA,gEAA3C,GAAkEA,oEAAhF;AACA,aAAKgF,IAAL,CAAUC,uEAAV;AACD;KAtI4C;;AAE7C,SAAKvF,WAAL,GAAmBkE,OAAO,CAAClE,WAAR,IAAuB,IAA1C;AACA,SAAK+C,WAAL,GAAmBmB,OAAO,CAACnB,WAAR,IAAuB,KAA1C;AACD;;AAEoB,MAAjB0C,iBAAiB;AAAA;;AACnB,WAAO,CAAC,EAAE,CAAKR,aAAAA,GAAAA,IAAAA,CAAAA,OAAL,MAAcS,IAAAA,IAAAA,aAAAA,KAAAA,KAAAA,CAAAA,IAAAA,aAAAA,CAAAA,WAAd,IAA6B,KAAKrF,MAAL,KAAgBC,oEAA/C,CAAR;AACD;;AAEW,MAARP,QAAQ;AAAA;;AACV,WAAO,CAAK4F,CAAAA,qBAAAA,GAAAA,IAAAA,CAAAA,eAAL,MAAsB5F,IAAAA,IAAAA,qBAAAA,KAAAA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,qBAAAA,CAAAA,QAAtB,KAAkC,IAAzC;AACD;;EAEW,IAARA,QAAQ,CAAC6F,CAAD,EAAmC;AAC7C,UAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;AACD;;EAEDC,kBAAkB,CAAC5B,OAAD,EAAkC;AAClD,QAAI,KAAK7D,MAAL,KAAgBC,gEAApB,EAA0C;;AAC1C,QAAI4D,OAAJ,KAAIA,IAAAA,IAAAA,OAAJ,eAAIA,OAAO,CAAEnB,WAAb,EAA0B;AACxB,WAAKA,WAAL,GAAmBmB,OAAO,CAACnB,WAA3B;AACD;AACF;;EAES,MAAJgD,IAAI,CAAC7B,OAAD,EAA4B;IACpC,KAAM8B,CAAAA,+BAAN,GADoC;;IAGpC,IAAI,CAAC,IAAKhG,CAAAA,WAAV,EAAuB;MACrB,IAAKA,CAAAA,WAAL,GAAmBiG,8DAAc,CAACpB,mEAAD,EAA0B,KAA1B,CAAjC;AACD;;AACD,SAAKI,OAAL,GAAe,MAAMhB,cAAc,CAAC;AAAEX,MAAAA,QAAQ,EAAE,GAAZ;AAAiBC,MAAAA,KAAK,EAAE;AAAxB,KAAD,CAAnC;IACA,IAAI,CAAC,KAAK0B,OAAV,EAAmB,MAAMiB,kFAAA,EAAN;AACnB,SAAKP,eAAL,GAAuB,IAAIS,8EAAJ,CAA4B;AAAEC,MAAAA,MAAM,EAAE;AAAErG,QAAAA,WAAW,EAAE,IAAKA,CAAAA,WAAAA;AAApB;AAAV,KAA5B,CAAvB;AACA,SAAKK,MAAL,GAAcC,gEAAd;IACA,IAAKgF,CAAAA,IAAL,CAAUC,gEAAV,EAAgCd,mEAAhC;;IAEA,IAAI;MACF6B,qDAAA,CAAU,8BAAV;;MACA,IAAIpC,OAAO,CAACsC,WAAZ,EAAyB;QACvB,IAAKpB,CAAAA,UAAL,GAAkB,IAAlB;QACA,MAAM,KAAKqB,OAAL,EAAN;AACD;KALH,CAME,OAAOC,KAAP,EAAc;AACdJ,MAAAA,qDAAA,CAAU,gDAAV,EAA4DI,KAA5D;AACA,WAAKpB,IAAL,CAAU,SAAV,EAAqBoB,KAArB;AACD;AACF;;AAEY,QAAPD,OAAO;AAAA;;IACX,IAAI;AACF,YAAME,2BAAN;AACA,WAAKtG,MAAL,GAAcC,qEAAd;AACA,WAAKgF,IAAL,CAAUC,qEAAV,EAAqC;QAAEsB,OAAO,EAAEpC,mEAAgBC;OAAhE;MAEA,IAAI,CAAC,KAAKO,OAAV,EAAmB,MAAMiB,kFAAA,EAAN;;AACnB,UAAI,CAAC,KAAKjB,OAAL,CAAaS,WAAlB,EAA+B;AAC7B,cAAMoB,gBAAgB,GAAG,IAAK7B,CAAAA,OAAL,CAAa8B,iBAAtC;;QACA,IAAI;AACF,gBAAM,IAAIvD,OAAJ,CAA6C,CAACC,OAAD,EAAUC,MAAV,KAAoB;YACrE,MAAM+C,OAAO,GAAG,YAAW;AACzB,oBAAM,IAAKO,CAAAA,mBAAL,CAAyB,KAAK/B,OAA9B,CAAN;cACAxB,OAAO,CAAC,IAAK1D,CAAAA,QAAN,CAAP;aAFF;;YAIA,IAAI,CAAC,IAAKkF,CAAAA,OAAV,EAAmB,OAAOvB,MAAM,CAACwC,kFAAA,EAAD,CAAb;;YACnB,IAAKjB,CAAAA,OAAL,CAAagC,IAAb,CAAkB,SAAlB,EAA6BR,OAA7B,EANqE;;;AAQpE,iBAAKxB,OAAL,CAAwC8B,iBAAxC,GAA4D,YAAuB;AAClFrD,cAAAA,MAAM,CAACwC,kFAAA,EAAD,CAAN;;AADkF,gDAAnBiB,IAAmB;gBAAnBA,IAAmB;AAAA;;cAElF,OAAOL,gBAAgB,CAACM,KAAjB,CAAuB,KAAI,CAACnC,OAA5B,EAAqCkC,IAArC,CAAP;aAFD;;AAKD,iBAAKlC,OAAL,CAAawB,OAAb,GAAuB1C,KAAvB,CAA8BsD,MAAD,IAAoB;cAC/C3D,MAAM,CAAC2D,MAAD,CAAN;aADF;AAGD,WAhBK,CAAN;SADF,CAkBE,OAAOX,KAAP,EAAuB;AACvB,cAAIA,KAAK,YAAYY,yDAArB,EAAoC,MAAMZ,KAAN;UACpC,MAAMxG,4EAAA,CAAkCwG,KAAlC,KAAkCA,IAAAA,IAAAA,KAAlC,KAAkCA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,KAAe,CAAE/D,OAAnD,CAAN;AACD,SArBD,SAqBU;AACR,eAAKsC,OAAL,CAAa8B,iBAAb,GAAiCD,gBAAjC;AACD;AACF,OA1BD,MA0BO;AACL,cAAM,IAAKE,CAAAA,mBAAL,CAAyB,KAAK/B,OAA9B,CAAN;AACD;;MAED,IAAI,CAAC,IAAKA,CAAAA,OAAL,CAAauC,SAAlB,EAA6B,MAAMtH,4EAAA,EAAN;;AAC7B,WAAK+E,OAAL,CAAawC,EAAb,CAAgB,YAAhB,EAA8B,KAAKtC,aAAnC;;AAEA,aAAO,KAAKpF,QAAZ;KAvCF,CAwCE,OAAO2G,KAAP,EAAuB;AACvB;AACA,WAAKrG,MAAL,GAAcC,gEAAd;MACA,IAAK8E,CAAAA,UAAL,GAAkB,KAAlB;AACA,WAAKE,IAAL,CAAUC,kEAAV,EAAkCmB,KAAlC;AACA,YAAMA,KAAN;AACD;AACF;;AAEe,QAAVzD,UAAU,GAAmD;AAAA,QAAlDiB,OAAkD,GAAlB;AAAEyD,MAAAA,OAAO,EAAE;KAAO;IACjE,MAAM,MAAM1E,UAAN,EAAN;;IACA,IAAI;AAAA;;AACF,+BAAM,IAAKgC,CAAAA,OAAX,MAAM,4DAAchC,UAAd,EAAN;;MACA,IAAIiB,OAAO,CAACyD,OAAZ,EAAqB;AACnB,aAAKtH,MAAL,GAAcC,oEAAd;QACA,IAAKqF,CAAAA,eAAL,GAAuB,IAAvB;QACA,IAAKV,CAAAA,OAAL,GAAe,IAAf;AACD;;AACD,WAAKK,IAAL,CAAUC,uEAAV;KAPF,CAQE,OAAOmB,KAAP,EAAuB;AACvB,WAAKpB,IAAL,CAAUC,kEAAV,EAAkCrF,+EAAA,CAAqCwG,KAArC,KAAqCA,IAAAA,IAAAA,KAArC,uBAAqCA,KAAe,CAAE/D,OAAtD,CAAlC;AACD;AACF;;AAEgB,QAAXiF,WAAW;IACf,IAAI,CAAC,IAAKnC,CAAAA,iBAAV,EAA6B,MAAMvF,8EAAA,CAAmC,uDAAnC,CAAN;AAC7B,WAAO,EAAP;AACD;;EAEgC,MAAnB8G,mBAAmB,CAACa,gBAAD,EAAyC;IACxE,IAAI,CAAC,IAAKlC,CAAAA,eAAV,EAA2B,MAAMzF,4EAAA,CAAiC,qBAAjC,CAAN;AAC3B,UAAM,KAAKyF,eAAL,CAAqBmC,aAArB,CAAmCD,gBAAnC,CAAN;AACA,SAAKxH,MAAL,GAAcC,oEAAd;AACA,SAAKgF,IAAL,CAAUC,oEAAV,EAAoC;MAAEsB,OAAO,EAAEpC,mEAAX;AAAoCsD,MAAAA,WAAW,EAAE,IAAK3C,CAAAA,UAAAA;KAA1F;AACA,WAAO,KAAKrF,QAAZ;AACD;;AA9IwD","sources":["webpack://annotation/./node_modules/@web3auth/base-solana-adapter/src/baseSolanaAdapter.ts","webpack://annotation/./node_modules/@web3auth/base-solana-adapter/node_modules/base-x/src/index.js","webpack://annotation/./node_modules/@web3auth/base-solana-adapter/node_modules/bs58/index.js","webpack://annotation/./node_modules/@web3auth/phantom-adapter/src/utils.ts","webpack://annotation/./node_modules/@web3auth/phantom-adapter/src/phantomAdapter.ts"],"sourcesContent":["import {\n  ADAPTER_STATUS,\n  BaseAdapter,\n  checkIfTokenIsExpired,\n  clearToken,\n  getSavedToken,\n  saveToken,\n  signChallenge,\n  UserAuthInfo,\n  verifySignedChallenge,\n  WalletLoginError,\n} from \"@web3auth/base\";\nimport bs58 from \"bs58\";\n\nexport abstract class BaseSolanaAdapter<T> extends BaseAdapter<T> {\n  async authenticateUser(): Promise<UserAuthInfo> {\n    if (!this.provider || !this.chainConfig?.chainId) throw WalletLoginError.notConnectedError();\n\n    const { chainNamespace, chainId } = this.chainConfig;\n\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n    const accounts = await this.provider.request<string[]>({\n      method: \"getAccounts\",\n    });\n    if (accounts && accounts.length > 0) {\n      const existingToken = getSavedToken(accounts[0] as string, this.name);\n      if (existingToken) {\n        const isExpired = checkIfTokenIsExpired(existingToken);\n        if (!isExpired) {\n          return { idToken: existingToken };\n        }\n      }\n\n      const payload = {\n        domain: window.location.origin,\n        uri: window.location.href,\n        address: accounts[0],\n        chainId: parseInt(chainId, 16),\n        version: \"1\",\n        nonce: Math.random().toString(36).slice(2),\n        issuedAt: new Date().toISOString(),\n      };\n\n      const challenge = await signChallenge(payload, chainNamespace);\n      const encodedMessage = new TextEncoder().encode(challenge);\n      const signedMessage = await this.provider.request<Uint8Array>({\n        method: \"signMessage\",\n        params: {\n          message: encodedMessage,\n          display: \"utf8\",\n        },\n      });\n      const idToken = await verifySignedChallenge(chainNamespace, bs58.encode(signedMessage as Uint8Array), challenge, this.name, this.sessionTime);\n      saveToken(accounts[0] as string, this.name, idToken);\n      return {\n        idToken,\n      };\n    }\n    throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n  }\n\n  async disconnect(): Promise<void> {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.disconnectionError(\"Not connected with wallet\");\n    const accounts = await this.provider.request<string[]>({\n      method: \"getAccounts\",\n    });\n    if (accounts && accounts.length > 0) {\n      clearToken(accounts[0], this.name);\n    }\n  }\n}\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) {\n    } else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength)\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source)\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = new Uint8Array(zeroes + (size - it4))\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","const basex = require('base-x')\nconst ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","import type { IPhantomWalletProvider } from \"@web3auth/solana-provider\";\n\nexport function poll(callback: () => boolean | Promise<boolean>, interval: number, count: number): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    if (count > 0) {\n      setTimeout(async () => {\n        const done = await callback();\n        if (done) resolve(done);\n        if (!done)\n          poll(callback, interval, count - 1)\n            .then((res) => {\n              resolve(res);\n              return res;\n            })\n            .catch((err) => reject(err));\n      }, interval);\n    } else {\n      resolve(false);\n    }\n  });\n}\n\nexport const detectProvider = async (\n  options: { interval: number; count: number } = { interval: 1000, count: 3 }\n): Promise<IPhantomWalletProvider | null> => {\n  const isPhantomAvailable = typeof window !== \"undefined\" && !!(window as any).solana?.isPhantom;\n  if (isPhantomAvailable) {\n    return (window as any).solana;\n  }\n  const isAvailable = await poll(() => (window as any).solana?.isPhantom, options.interval, options.count);\n  if (isAvailable) return (window as any).solana;\n  return null;\n};\n","import {\n  ADAPTER_CATEGORY,\n  ADAPTER_CATEGORY_TYPE,\n  ADAPTER_EVENTS,\n  ADAPTER_NAMESPACES,\n  ADAPTER_STATUS,\n  ADAPTER_STATUS_TYPE,\n  AdapterInitOptions,\n  AdapterNamespaceType,\n  CHAIN_NAMESPACES,\n  ChainNamespaceType,\n  CONNECTED_EVENT_DATA,\n  CustomChainConfig,\n  getChainConfig,\n  log,\n  SafeEventEmitterProvider,\n  UserInfo,\n  WALLET_ADAPTERS,\n  WalletInitializationError,\n  WalletLoginError,\n  Web3AuthError,\n} from \"@web3auth/base\";\nimport { BaseSolanaAdapter } from \"@web3auth/base-solana-adapter\";\nimport { IPhantomWalletProvider, PhantomInjectedProvider } from \"@web3auth/solana-provider\";\n\nimport { detectProvider } from \"./utils\";\nexport interface PhantomAdapterOptions {\n  chainConfig?: CustomChainConfig;\n  sessionTime?: number;\n}\n\nexport class PhantomAdapter extends BaseSolanaAdapter<void> {\n  readonly name: string = WALLET_ADAPTERS.PHANTOM;\n\n  readonly adapterNamespace: AdapterNamespaceType = ADAPTER_NAMESPACES.SOLANA;\n\n  readonly currentChainNamespace: ChainNamespaceType = CHAIN_NAMESPACES.SOLANA;\n\n  readonly type: ADAPTER_CATEGORY_TYPE = ADAPTER_CATEGORY.EXTERNAL;\n\n  public status: ADAPTER_STATUS_TYPE = ADAPTER_STATUS.NOT_READY;\n\n  public _wallet: IPhantomWalletProvider | null = null;\n\n  private phantomProvider: PhantomInjectedProvider | null = null;\n\n  private rehydrated = false;\n\n  constructor(options: PhantomAdapterOptions = {}) {\n    super();\n    this.chainConfig = options.chainConfig || null;\n    this.sessionTime = options.sessionTime || 86400;\n  }\n\n  get isWalletConnected(): boolean {\n    return !!(this._wallet?.isConnected && this.status === ADAPTER_STATUS.CONNECTED);\n  }\n\n  get provider(): SafeEventEmitterProvider | null {\n    return this.phantomProvider?.provider || null;\n  }\n\n  set provider(_: SafeEventEmitterProvider | null) {\n    throw new Error(\"Not implemented\");\n  }\n\n  setAdapterSettings(options: { sessionTime?: number }): void {\n    if (this.status === ADAPTER_STATUS.READY) return;\n    if (options?.sessionTime) {\n      this.sessionTime = options.sessionTime;\n    }\n  }\n\n  async init(options: AdapterInitOptions): Promise<void> {\n    super.checkInitializationRequirements();\n    // set chainConfig for mainnet by default if not set\n    if (!this.chainConfig) {\n      this.chainConfig = getChainConfig(CHAIN_NAMESPACES.SOLANA, \"0x1\");\n    }\n    this._wallet = await detectProvider({ interval: 500, count: 3 });\n    if (!this._wallet) throw WalletInitializationError.notInstalled();\n    this.phantomProvider = new PhantomInjectedProvider({ config: { chainConfig: this.chainConfig as CustomChainConfig } });\n    this.status = ADAPTER_STATUS.READY;\n    this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.PHANTOM);\n\n    try {\n      log.debug(\"initializing phantom adapter\");\n      if (options.autoConnect) {\n        this.rehydrated = true;\n        await this.connect();\n      }\n    } catch (error) {\n      log.error(\"Failed to connect with cached phantom provider\", error);\n      this.emit(\"ERRORED\", error);\n    }\n  }\n\n  async connect(): Promise<SafeEventEmitterProvider | null> {\n    try {\n      super.checkConnectionRequirements();\n      this.status = ADAPTER_STATUS.CONNECTING;\n      this.emit(ADAPTER_EVENTS.CONNECTING, { adapter: WALLET_ADAPTERS.PHANTOM });\n\n      if (!this._wallet) throw WalletInitializationError.notInstalled();\n      if (!this._wallet.isConnected) {\n        const handleDisconnect = this._wallet._handleDisconnect;\n        try {\n          await new Promise<SafeEventEmitterProvider | null>((resolve, reject) => {\n            const connect = async () => {\n              await this.connectWithProvider(this._wallet as IPhantomWalletProvider);\n              resolve(this.provider);\n            };\n            if (!this._wallet) return reject(WalletInitializationError.notInstalled());\n            this._wallet.once(\"connect\", connect);\n            // Raise an issue on phantom that if window is closed, disconnect event is not fired\n            (this._wallet as IPhantomWalletProvider)._handleDisconnect = (...args: unknown[]) => {\n              reject(WalletInitializationError.windowClosed());\n              return handleDisconnect.apply(this._wallet, args);\n            };\n\n            this._wallet.connect().catch((reason: unknown) => {\n              reject(reason);\n            });\n          });\n        } catch (error: unknown) {\n          if (error instanceof Web3AuthError) throw error;\n          throw WalletLoginError.connectionError((error as Error)?.message);\n        } finally {\n          this._wallet._handleDisconnect = handleDisconnect;\n        }\n      } else {\n        await this.connectWithProvider(this._wallet);\n      }\n\n      if (!this._wallet.publicKey) throw WalletLoginError.connectionError();\n      this._wallet.on(\"disconnect\", this._onDisconnect);\n\n      return this.provider;\n    } catch (error: unknown) {\n      // ready again to be connected\n      this.status = ADAPTER_STATUS.READY;\n      this.rehydrated = false;\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n      throw error;\n    }\n  }\n\n  async disconnect(options: { cleanup: boolean } = { cleanup: false }): Promise<void> {\n    await super.disconnect();\n    try {\n      await this._wallet?.disconnect();\n      if (options.cleanup) {\n        this.status = ADAPTER_STATUS.NOT_READY;\n        this.phantomProvider = null;\n        this._wallet = null;\n      }\n      this.emit(ADAPTER_EVENTS.DISCONNECTED);\n    } catch (error: unknown) {\n      this.emit(ADAPTER_EVENTS.ERRORED, WalletLoginError.disconnectionError((error as Error)?.message));\n    }\n  }\n\n  async getUserInfo(): Promise<Partial<UserInfo>> {\n    if (!this.isWalletConnected) throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n    return {};\n  }\n\n  private async connectWithProvider(injectedProvider: IPhantomWalletProvider): Promise<SafeEventEmitterProvider | null> {\n    if (!this.phantomProvider) throw WalletLoginError.connectionError(\"No phantom provider\");\n    await this.phantomProvider.setupProvider(injectedProvider);\n    this.status = ADAPTER_STATUS.CONNECTED;\n    this.emit(ADAPTER_EVENTS.CONNECTED, { adapter: WALLET_ADAPTERS.PHANTOM, reconnected: this.rehydrated } as CONNECTED_EVENT_DATA);\n    return this.provider;\n  }\n\n  private _onDisconnect = () => {\n    if (this._wallet) {\n      this._wallet.off(\"disconnect\", this._onDisconnect);\n      this.rehydrated = false;\n      // ready to be connected again only if it was previously connected and not cleaned up\n      this.status = this.status === ADAPTER_STATUS.CONNECTED ? ADAPTER_STATUS.READY : ADAPTER_STATUS.NOT_READY;\n      this.emit(ADAPTER_EVENTS.DISCONNECTED);\n    }\n  };\n}\n"],"names":["BaseSolanaAdapter","BaseAdapter","authenticateUser","provider","chainConfig","chainId","WalletLoginError","notConnectedError","chainNamespace","status","ADAPTER_STATUS","CONNECTED","accounts","request","method","length","existingToken","getSavedToken","name","isExpired","checkIfTokenIsExpired","idToken","payload","domain","window","location","origin","uri","href","address","parseInt","version","nonce","Math","random","toString","slice","issuedAt","Date","toISOString","challenge","signChallenge","encodedMessage","TextEncoder","encode","signedMessage","params","message","display","verifySignedChallenge","bs58","sessionTime","saveToken","disconnect","disconnectionError","clearToken","poll","callback","interval","count","Promise","resolve","reject","setTimeout","done","then","res","catch","err","detectProvider","options","isPhantomAvailable","solana","isPhantom","isAvailable","PhantomAdapter","constructor","WALLET_ADAPTERS","PHANTOM","ADAPTER_NAMESPACES","SOLANA","CHAIN_NAMESPACES","ADAPTER_CATEGORY","EXTERNAL","NOT_READY","_wallet","off","_onDisconnect","rehydrated","READY","emit","ADAPTER_EVENTS","DISCONNECTED","isWalletConnected","isConnected","phantomProvider","_","Error","setAdapterSettings","init","checkInitializationRequirements","getChainConfig","WalletInitializationError","notInstalled","PhantomInjectedProvider","config","log","debug","autoConnect","connect","error","checkConnectionRequirements","CONNECTING","adapter","handleDisconnect","_handleDisconnect","connectWithProvider","once","windowClosed","args","apply","reason","Web3AuthError","connectionError","publicKey","on","ERRORED","cleanup","getUserInfo","injectedProvider","setupProvider","reconnected"],"sourceRoot":""}