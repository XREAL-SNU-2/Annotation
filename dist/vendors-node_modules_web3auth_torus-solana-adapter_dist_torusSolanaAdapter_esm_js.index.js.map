{"version":3,"file":"vendors-node_modules_web3auth_torus-solana-adapter_dist_torusSolanaAdapter_esm_js.index.js","mappings":"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","sources":["webpack://annotation/./node_modules/@toruslabs/solana-embed/src/messages.ts","webpack://annotation/./node_modules/@toruslabs/solana-embed/src/interfaces.ts","webpack://annotation/./node_modules/@toruslabs/solana-embed/src/config.ts","webpack://annotation/./node_modules/@toruslabs/solana-embed/src/loglevel.ts","webpack://annotation/./node_modules/@toruslabs/solana-embed/src/utils.ts","webpack://annotation/./node_modules/@toruslabs/solana-embed/src/baseProvider.ts","webpack://annotation/./node_modules/@toruslabs/solana-embed/src/embedUtils.ts","webpack://annotation/./node_modules/@toruslabs/solana-embed/src/PopupHandler.ts","webpack://annotation/./node_modules/@toruslabs/solana-embed/src/communicationProvider.ts","webpack://annotation/./node_modules/@toruslabs/solana-embed/src/inPageProvider.ts","webpack://annotation/./node_modules/@toruslabs/solana-embed/src/siteMetadata.ts","webpack://annotation/./node_modules/@toruslabs/solana-embed/src/embed.ts","webpack://annotation/./node_modules/@web3auth/base-solana-adapter/src/baseSolanaAdapter.ts","webpack://annotation/./node_modules/@web3auth/base-solana-adapter/node_modules/base-x/src/index.js","webpack://annotation/./node_modules/@web3auth/base-solana-adapter/node_modules/bs58/index.js","webpack://annotation/./node_modules/@web3auth/torus-solana-adapter/src/solanaWalletAdapter.ts","webpack://annotation/./node_modules/fast-deep-equal/index.js","webpack://annotation/./node_modules/is-stream/index.js"],"sourcesContent":["export default {\n  errors: {\n    disconnected: (): string => \"Torus: Lost connection to Torus.\",\n    permanentlyDisconnected: (): string => \"Torus: Disconnected from iframe. Page reload required.\",\n    unsupportedSync: (method: string): string =>\n      `Torus: The Torus Ethereum provider does not support synchronous methods like ${method} without a callback parameter.`,\n    invalidDuplexStream: (): string => \"Must provide a Node.js-style duplex stream.\",\n    invalidOptions: (maxEventListeners: number): string => `Invalid options. Received: { maxEventListeners: ${maxEventListeners}}`,\n    invalidRequestArgs: (): string => `Expected a single, non-array, object argument.`,\n    invalidRequestMethod: (): string => `'args.method' must be a non-empty string.`,\n    invalidRequestParams: (): string => `'args.params' must be an object or array if provided.`,\n    invalidLoggerObject: (): string => `'args.logger' must be an object if provided.`,\n    invalidLoggerMethod: (method: string): string => `'args.logger' must include required method '${method}'.`,\n  },\n  info: {\n    connected: (chainId: string): string => `Torus: Connected to chain with ID \"${chainId}\".`,\n  },\n  warnings: {},\n};\n","import { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\n\nexport const PAYMENT_PROVIDER = {\n  MOONPAY: \"moonpay\",\n  WYRE: \"wyre\",\n  RAMPNETWORK: \"rampnetwork\",\n  XANPOOL: \"xanpool\",\n  MERCURYO: \"mercuryo\",\n  TRANSAK: \"transak\",\n} as const;\n\nexport const TORUS_BUILD_ENV = {\n  PRODUCTION: \"production\",\n  DEVELOPMENT: \"development\",\n  TESTING: \"testing\",\n} as const;\n\nexport type PAYMENT_PROVIDER_TYPE = typeof PAYMENT_PROVIDER[keyof typeof PAYMENT_PROVIDER];\n\nexport type TORUS_BUILD_ENV_TYPE = typeof TORUS_BUILD_ENV[keyof typeof TORUS_BUILD_ENV];\n\nexport const BUTTON_POSITION = {\n  BOTTOM_LEFT: \"bottom-left\",\n  TOP_LEFT: \"top-left\",\n  BOTTOM_RIGHT: \"bottom-right\",\n  TOP_RIGHT: \"top-right\",\n} as const;\n\nexport type EMBED_TRANSLATION_ITEM = {\n  continue: string;\n  actionRequired: string;\n  pendingAction: string;\n  cookiesRequired: string;\n  enableCookies: string;\n  clickHere: string;\n};\n\nexport type BUTTON_POSITION_TYPE = typeof BUTTON_POSITION[keyof typeof BUTTON_POSITION];\n\nexport type WALLET_PATH = \"transfer\" | \"topup\" | \"home\" | \"settings\" | \"history\" | \"discover\";\n\nexport const LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  TWITCH: \"twitch\",\n  APPLE: \"apple\",\n  LINE: \"line\",\n  GITHUB: \"github\",\n  KAKAO: \"kakao\",\n  LINKEDIN: \"linkedin\",\n  TWITTER: \"twitter\",\n  WEIBO: \"weibo\",\n  WECHAT: \"wechat\",\n  EMAIL_PASSWORDLESS: \"email_passwordless\",\n} as const;\n\nexport type LOGIN_PROVIDER_TYPE = typeof LOGIN_PROVIDER[keyof typeof LOGIN_PROVIDER];\n\nexport interface TorusCtorArgs {\n  /**\n   * Z-index of the modal and iframe\n   * @defaultValue 99999\n   */\n  modalZIndex?: number;\n}\n\nexport interface NetworkInterface {\n  /**\n   * Block explorer url for the chain\n   * @example https://explorer.solana.com/\n   */\n  blockExplorerUrl: string;\n  /**\n   * Logo url for the base token\n   */\n  logo: string;\n  /**\n   * Name for ticker\n   * @example 'Solana'\n   */\n  tickerName: string;\n  /**\n   * Symbol for ticker\n   * @example SOL\n   */\n  ticker: string;\n  /**\n   * RPC target Url for the chain\n   * @example https://api.devnet.solana.com/\n   */\n  rpcTarget: string;\n  /**\n   * Chain Id parameter(hex with 0x prefix) for the network. Mandatory for all networks. (assign one with a map to network identifier for platforms)\n   * @example 0x1 for mainnet, 0x2 for testnet, 0x3 for devnet,  'loading' if not connected to anything yet or connection fails\n   * @defaultValue 'loading'\n   */\n  chainId: string;\n  /**\n   * Display name for the network\n   */\n  displayName: string;\n}\n\nexport interface PaymentParams {\n  /**\n   * Address to send the funds to\n   */\n  selectedAddress?: string;\n  /**\n   * Default fiat currency for the user to make the payment in\n   */\n  selectedCurrency?: string;\n  /**\n   * Amount to buy in the selectedCurrency\n   */\n  fiatValue?: number;\n  /**\n   * Cryptocurrency to buy\n   */\n  selectedCryptoCurrency?: string;\n  /**\n   * Amount Cryptocurrency to buy\n   */\n  cryptoAmount?: number;\n}\n\nexport interface LoginParams {\n  loginProvider?: string;\n}\n\nexport interface UserInfo {\n  /**\n   * Email of the logged in user\n   */\n  email: string;\n  /**\n   * Full name of the logged in user\n   */\n  name: string;\n  /**\n   * Profile image of the logged in user\n   */\n  profileImage: string;\n  /**\n   * verifier of the logged in user (google, facebook etc)\n   */\n  verifier: string;\n  /**\n   * Verifier Id of the logged in user\n   *\n   * email for google,\n   * id for facebook,\n   * username for reddit,\n   * id for twitch,\n   * id for discord\n   */\n  verifierId: string;\n}\n\nexport interface LocaleLinks<T> {\n  /**\n   * Item corresponding to english\n   */\n  en?: T;\n  /**\n   * Item corresponding to japanese\n   */\n  ja?: T;\n  /**\n   * Item corresponding to korean\n   */\n  ko?: T;\n  /**\n   * Item corresponding to german\n   */\n  de?: T;\n  /**\n   * Item corresponding to chinese (simplified)\n   */\n  zh?: T;\n  /**\n   * Item corresponding to spanish\n   */\n  es?: T;\n}\n\nexport type NetworkLabel = \"mainnet-beta\" | \"testnet\" | \"devnet\";\n\nexport interface TorusParams {\n  /**\n   * Determines where the torus widget is visible on the page.\n   * @defaultValue bottom-left\n   */\n  buttonPosition?: BUTTON_POSITION_TYPE;\n  /**\n   * Api key\n   * Get yours today at {@link https://developer.tor.us | Dashboard}\n   */\n  apiKey?: string;\n\n  /**\n   * Torus Network Object\n   */\n  network?: NetworkInterface | NetworkLabel;\n  /**\n   * Build Environment of Torus.\n   *\n   * production uses https://solana.tor.us,\n   *\n   * development uses http://localhost:8080 (expects torus-website to be run locally),\n   *\n   * testing uses https://solana-testing.tor.us (latest internal build)\n   * @defaultValue production\n   */\n  buildEnv?: TORUS_BUILD_ENV_TYPE;\n  /**\n   * Enables or disables logging.\n   *\n   * Defaults to false in prod and true in other environments\n   */\n  enableLogging?: boolean;\n  /**\n   * whether to show/hide torus widget.\n   *\n   * Defaults to true\n   * @defaultValue true\n   */\n  showTorusButton?: boolean;\n  /**\n   * Prefers to use localStorage instead of sessionStorage for torus iframe. Allows longer lived sessions\n   *\n   * Defaults to false\n   * @defaultValue false\n   */\n  useLocalStorage?: boolean;\n  /**\n   * Allows passing external data for initialize\n   *\n   * Defaults to empty object\n   */\n  extraParams?: { [keyof: string]: string };\n}\n\nexport interface TorusLoginParams {\n  loginProvider?: LOGIN_PROVIDER_TYPE;\n  login_hint?: string;\n}\n\nexport interface ProviderOptions {\n  /**\n   * The name of the stream used to connect to the wallet.\n   */\n  jsonRpcStreamName?: string;\n\n  /**\n   * The maximum number of event listeners.\n   */\n  maxEventListeners?: number;\n}\n\nexport interface BaseProviderState {\n  isConnected: boolean;\n  initialized: boolean;\n  isPermanentlyDisconnected: boolean;\n  hasEmittedConnection: boolean;\n}\n\nexport interface InPageProviderState extends BaseProviderState {\n  accounts: null | string[];\n  isUnlocked: boolean;\n}\n\nexport interface CommunicationProviderState extends BaseProviderState {\n  buttonPosition: string;\n  isLoggedIn: boolean;\n  torusWidgetVisibility: boolean;\n  currentLoginProvider: LOGIN_PROVIDER_TYPE;\n  isIFrameFullScreen: boolean;\n}\n\nexport type Maybe<T> = Partial<T> | T | null | undefined;\n\nexport interface UnValidatedJsonRpcRequest extends JRPCRequest<unknown> {\n  windowId?: string;\n}\n\nexport interface RequestArguments<T> {\n  /** The RPC method to request. */\n  method: string;\n\n  /** The params of the RPC method, if any. */\n  params?: T;\n}\n","import { EMBED_TRANSLATION_ITEM, LocaleLinks, LOGIN_PROVIDER } from \"./interfaces\";\n\nconst translations = {\n  en: {\n    embed: {\n      continue: \"Continue\",\n      actionRequired: \"Authorization required\",\n      pendingAction: \"Click continue to proceed with your request in a popup\",\n      cookiesRequired: \"Cookies Required\",\n      enableCookies: \"Please enable cookies in your browser preferences to access Torus\",\n      clickHere: \"More Info\",\n    },\n  },\n  de: {\n    embed: {\n      continue: \"Fortsetzen\",\n      actionRequired: \"Autorisierung erforderlich\",\n      pendingAction: \"Klicken Sie in einem Popup auf Weiter, um mit Ihrer Anfrage fortzufahren\",\n      cookiesRequired: \"Cookies benötigt\",\n      enableCookies: \"Bitte aktivieren Sie Cookies in Ihren Browsereinstellungen, um auf Torus zuzugreifen\",\n      clickHere: \"Mehr Info\",\n    },\n  },\n  ja: {\n    embed: {\n      continue: \"継続する\",\n      actionRequired: \"認証が必要です\",\n      pendingAction: \"続行をクリックして、ポップアップでリクエストを続行します\",\n      cookiesRequired: \"必要なクッキー\",\n      enableCookies: \"Torusにアクセスするには、ブラウザの設定でCookieを有効にしてください。\",\n      clickHere: \"詳しくは\",\n    },\n  },\n  ko: {\n    embed: {\n      continue: \"계속하다\",\n      actionRequired: \"승인 필요\",\n      pendingAction: \"팝업에서 요청을 진행하려면 계속을 클릭하십시오.\",\n      cookiesRequired: \"쿠키 필요\",\n      enableCookies: \"브라우저 환경 설정에서 쿠키를 활성화하여 Torus에 액세스하십시오.\",\n      clickHere: \"더 많은 정보\",\n    },\n  },\n  zh: {\n    embed: {\n      continue: \"继续\",\n      actionRequired: \"需要授权\",\n      pendingAction: \"单击继续以在弹出窗口中继续您的请求\",\n      cookiesRequired: \"必填Cookie\",\n      enableCookies: \"请在您的浏览器首选项中启用cookie以访问Torus。\",\n      clickHere: \"更多信息\",\n    },\n  },\n} as LocaleLinks<{ embed: EMBED_TRANSLATION_ITEM }>;\n\nexport default {\n  supportedVerifierList: [LOGIN_PROVIDER.GOOGLE, LOGIN_PROVIDER.REDDIT, LOGIN_PROVIDER.DISCORD],\n  api: \"https://api.tor.us\",\n  translations,\n  prodTorusUrl: \"\",\n  localStorageKey: `torus-${window.location.hostname}`,\n};\n","import loglevel from \"loglevel\";\n\nexport default loglevel.getLogger(\"solana-embed\");\n","import { JRPCMiddleware, SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\nimport { LogLevelDesc } from \"loglevel\";\n\nimport config from \"./config\";\nimport { NetworkInterface, NetworkLabel } from \"./interfaces\";\nimport log from \"./loglevel\";\n\n// utility functions\n\n/**\n * json-rpc-engine middleware that logs RPC errors and and validates req.method.\n *\n * @param log - The logging API to use.\n * @returns  json-rpc-engine middleware function\n */\nexport function createErrorMiddleware(): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next) => {\n    // json-rpc-engine will terminate the request when it notices this error\n    if (typeof req.method !== \"string\" || !req.method) {\n      res.error = ethErrors.rpc.invalidRequest({\n        message: `The request 'method' must be a non-empty string.`,\n        data: req,\n      });\n    }\n\n    next((done) => {\n      const { error } = res;\n      if (!error) {\n        return done();\n      }\n      log.error(`Torus - RPC Error: ${error.message}`, error);\n      return done();\n    });\n  };\n}\n\n/**\n * Logs a stream disconnection error. Emits an 'error' if given an\n * EventEmitter that has listeners for the 'error' event.\n *\n * @param log - The logging API to use.\n * @param remoteLabel - The label of the disconnected stream.\n * @param error - The associated error to log.\n * @param emitter - The logging API to use.\n */\nexport function logStreamDisconnectWarning(remoteLabel: string, error: Error, emitter: SafeEventEmitter): void {\n  let warningMsg = `Torus: Lost connection to \"${remoteLabel}\".`;\n  if (error?.stack) {\n    warningMsg += `\\n${error.stack}`;\n  }\n  log.warn(warningMsg);\n  if (emitter && emitter.listenerCount(\"error\") > 0) {\n    emitter.emit(\"error\", warningMsg);\n  }\n}\n\nexport const getWindowId = (): string => Math.random().toString(36).slice(2);\n\nexport const getTorusUrl = async (buildEnv: string): Promise<{ torusUrl: string; logLevel: LogLevelDesc }> => {\n  let torusUrl: string;\n  let logLevel: LogLevelDesc;\n  // const versionUsed = version;\n  // log.info(\"solana embed version used: \", versionUsed);\n  switch (buildEnv) {\n    case \"testing\":\n      torusUrl = \"https://solana-testing.tor.us\";\n      logLevel = \"debug\";\n      break;\n    case \"development\":\n      torusUrl = \"http://localhost:8080\";\n      logLevel = \"debug\";\n      break;\n    default:\n      torusUrl = `https://solana.tor.us`;\n      logLevel = \"error\";\n      break;\n  }\n  return { torusUrl, logLevel };\n};\n\nexport const getUserLanguage = (): string => {\n  let userLanguage = window.navigator.language || \"en-US\";\n  const userLanguages = userLanguage.split(\"-\");\n  userLanguage = Object.prototype.hasOwnProperty.call(config.translations, userLanguages[0]) ? userLanguages[0] : \"en\";\n  return userLanguage;\n};\n\nexport const NOOP = (): void => {\n  // empty function\n};\n\nexport const FEATURES_PROVIDER_CHANGE_WINDOW = { height: 660, width: 375 };\nexport const FEATURES_DEFAULT_WALLET_WINDOW = { height: 740, width: 1315 };\nexport const FEATURES_DEFAULT_POPUP_WINDOW = { height: 700, width: 1200 };\nexport const FEATURES_CONFIRM_WINDOW = { height: 600, width: 400 };\n\nexport function storageAvailable(type: \"localStorage\" | \"sessionStorage\"): boolean {\n  let storage: Storage;\n  try {\n    storage = window[type];\n    const x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (e) {\n    return (\n      e &&\n      // everything except Firefox\n      (e.code === 22 ||\n        // Firefox\n        e.code === 1014 ||\n        // test name field too, because code might not be present\n        // everything except Firefox\n        e.name === \"QuotaExceededError\" ||\n        // Firefox\n        e.name === \"NS_ERROR_DOM_QUOTA_REACHED\") &&\n      // acknowledge QuotaExceededError only if there's something already stored\n      storage &&\n      storage.length !== 0\n    );\n  }\n}\n\n/**\n * popup handler utils\n */\nexport function getPopupFeatures({ width: w, height: h }: { width: number; height: number }): string {\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n\n  const width = window.innerWidth\n    ? window.innerWidth\n    : document.documentElement.clientWidth\n    ? document.documentElement.clientWidth\n    : window.screen.width;\n\n  const height = window.innerHeight\n    ? window.innerHeight\n    : document.documentElement.clientHeight\n    ? document.documentElement.clientHeight\n    : window.screen.height;\n\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = `titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=${h / systemZoom},width=${w / systemZoom},top=${top},left=${left}`;\n  return features;\n}\n\nexport const getNetworkConfig = (label: NetworkLabel): NetworkInterface | undefined => {\n  switch (label) {\n    case \"mainnet-beta\":\n      return {\n        blockExplorerUrl: \"https://explorer.solana.com\",\n        chainId: \"0x1\",\n        displayName: \"Solana Mainnet\",\n        logo: \"solana.svg\",\n        rpcTarget: \"https://green-dark-sky.solana-mainnet.quiknode.pro/0b4b99540b7930cf590dc7fb0a2d1c9a906fd53c/\",\n        ticker: \"SOL\",\n        tickerName: \"Solana Token\",\n      } as NetworkInterface;\n\n    case \"testnet\":\n      return {\n        blockExplorerUrl: \"https://explorer.solana.com\",\n        chainId: \"0x2\",\n        displayName: \"Solana Testnet\",\n        logo: \"solana.svg\",\n        rpcTarget: \"https://spring-black-waterfall.solana-testnet.quiknode.pro/89830c37acd15df105b23742d37f33dc85b5eff8/\",\n        ticker: \"SOL\",\n        tickerName: \"Solana Token\",\n      } as NetworkInterface;\n\n    case \"devnet\":\n      return {\n        blockExplorerUrl: \"https://explorer.solana.com\",\n        chainId: \"0x3\",\n        displayName: \"Solana Devnet\",\n        logo: \"solana.svg\",\n        rpcTarget: \"https://api.devnet.solana.com\",\n        ticker: \"SOL\",\n        tickerName: \"Solana Token\",\n      } as NetworkInterface;\n\n    default:\n      return undefined;\n  }\n};\n","import { createLoggerMiddleware, SafeEventEmitterProvider, SendCallBack } from \"@toruslabs/base-controllers\";\nimport {\n  createIdRemapMiddleware,\n  createStreamMiddleware,\n  getRpcPromiseCallback,\n  JRPCEngine,\n  JRPCRequest,\n  JRPCResponse,\n  ObjectMultiplex,\n  SafeEventEmitter,\n  Stream,\n} from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\nimport { duplex as isDuplexStream } from \"is-stream\";\nimport pump from \"pump\";\nimport type { Duplex } from \"readable-stream\";\n\nimport { BaseProviderState, Maybe, ProviderOptions, RequestArguments, UnValidatedJsonRpcRequest } from \"./interfaces\";\nimport messages from \"./messages\";\nimport { createErrorMiddleware, logStreamDisconnectWarning } from \"./utils\";\n\nabstract class BaseProvider<U extends BaseProviderState> extends SafeEventEmitter implements SafeEventEmitterProvider {\n  /**\n   * Indicating that this provider is a Torus provider.\n   */\n  public readonly isTorus: true;\n\n  _rpcEngine: JRPCEngine;\n\n  jsonRpcConnectionEvents: SafeEventEmitter;\n\n  protected _state: U;\n\n  constructor(connectionStream: Duplex, { maxEventListeners = 100, jsonRpcStreamName = \"provider\" }: ProviderOptions) {\n    super();\n    if (!isDuplexStream(connectionStream)) {\n      throw new Error(messages.errors.invalidDuplexStream());\n    }\n    this.isTorus = true;\n    this.setMaxListeners(maxEventListeners);\n\n    this._handleConnect = this._handleConnect.bind(this);\n    this._handleDisconnect = this._handleDisconnect.bind(this);\n    this._handleStreamDisconnect = this._handleStreamDisconnect.bind(this);\n\n    this._rpcRequest = this._rpcRequest.bind(this);\n    this._initializeState = this._initializeState.bind(this);\n\n    this.request = this.request.bind(this);\n    this.sendAsync = this.sendAsync.bind(this);\n    // this.enable = this.enable.bind(this);\n\n    // setup connectionStream multiplexing\n    const mux = new ObjectMultiplex();\n    pump(\n      connectionStream as unknown as Stream,\n      mux as unknown as Stream,\n      connectionStream as unknown as Stream,\n      this._handleStreamDisconnect.bind(this, \"Torus\")\n    );\n\n    // ignore phishing warning message (handled elsewhere)\n    mux.ignoreStream(\"phishing\");\n\n    // setup own event listeners\n    // connect to async provider\n\n    const jsonRpcConnection = createStreamMiddleware();\n    pump(\n      jsonRpcConnection.stream as unknown as Stream,\n      mux.createStream(jsonRpcStreamName) as unknown as Stream,\n      jsonRpcConnection.stream as unknown as Stream,\n      this._handleStreamDisconnect.bind(this, \"Torus RpcProvider\")\n    );\n\n    // handle RPC requests via dapp-side rpc engine\n    const rpcEngine = new JRPCEngine();\n    rpcEngine.push(createIdRemapMiddleware());\n    rpcEngine.push(createErrorMiddleware());\n    rpcEngine.push(createLoggerMiddleware({ origin: location.origin }));\n    rpcEngine.push(jsonRpcConnection.middleware);\n    this._rpcEngine = rpcEngine;\n\n    this.jsonRpcConnectionEvents = jsonRpcConnection.events;\n  }\n\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   * Resolves with the result of the method call, or rejects on error.\n   */\n  async request<TArgs, TResponse>(args: RequestArguments<TArgs>): Promise<Maybe<TResponse>> {\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestArgs(),\n        data: args,\n      });\n    }\n\n    const { method, params } = args;\n\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestMethod(),\n        data: args,\n      });\n    }\n\n    if (params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestParams(),\n        data: args,\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      this._rpcRequest({ method, params }, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n\n  send<T, V>(req: JRPCRequest<T>, callback: SendCallBack<V>): void;\n\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   */\n  send(payload: JRPCRequest<unknown>, callback: (error: Error | null, result?: JRPCResponse<unknown>) => void): void {\n    this._rpcRequest(payload, callback);\n  }\n\n  sendAsync<T, V>(req: JRPCRequest<T>): Promise<V>;\n\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   */\n  sendAsync(payload: JRPCRequest<unknown>): Promise<unknown> {\n    return new Promise((resolve, reject) => {\n      this._rpcRequest(payload, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n\n  /**\n   * Called when connection is lost to critical streams.\n   *\n   * emits TorusInpageProvider#disconnect\n   */\n  protected _handleStreamDisconnect(streamName: string, error: Error): void {\n    logStreamDisconnectWarning(streamName, error, this);\n    this._handleDisconnect(false, error ? error.message : undefined);\n  }\n\n  // Private Methods\n  //= ===================\n  /**\n   * Constructor helper.\n   * Populates initial state by calling 'wallet_getProviderState' and emits\n   * necessary events.\n   */\n  abstract _initializeState(...args: unknown[]): Promise<void>;\n\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound\n   */\n  protected abstract _rpcRequest(\n    payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[],\n    callback: (...args: unknown[]) => void,\n    isInternal?: boolean\n  ): void;\n\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param chainId - The ID of the newly connected chain.\n   * emits TorusInPageProvider#connect\n   */\n  protected abstract _handleConnect(...args: unknown[]): void;\n\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits TorusInpageProvider#disconnect\n   */\n  protected abstract _handleDisconnect(isRecoverable: boolean, errorMessage?: string): void;\n}\n\nexport default BaseProvider;\n","export const handleEvent = (handle: EventTarget, eventName: string, handler: (...args: unknown[]) => void, ...handlerArgs: unknown[]): void => {\n  const handlerWrapper = () => {\n    handler(...handlerArgs);\n    handle.removeEventListener(eventName, handlerWrapper);\n  };\n  handle.addEventListener(eventName, handlerWrapper);\n};\n\nexport async function documentReady(): Promise<void> {\n  return new Promise<void>((resolve) => {\n    if (document.readyState !== \"loading\") {\n      resolve();\n    } else {\n      handleEvent(document, \"DOMContentLoaded\", resolve);\n    }\n  });\n}\n\nexport const htmlToElement = <T extends Element>(html: string): T => {\n  const template = window.document.createElement(\"template\");\n  const trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild as T;\n};\n","import { SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\n\nimport { FEATURES_DEFAULT_POPUP_WINDOW, getPopupFeatures } from \"./utils\";\n\nclass PopupHandler extends SafeEventEmitter {\n  url: URL;\n\n  target: string;\n\n  features: string;\n\n  window: Window;\n\n  windowTimer: number;\n\n  iClosedWindow: boolean;\n\n  constructor({ url, target, features }: { url: URL; target?: string; features?: string }) {\n    super();\n    this.url = url;\n    this.target = target || \"_blank\";\n    this.features = features || getPopupFeatures(FEATURES_DEFAULT_POPUP_WINDOW);\n    this.window = undefined;\n    this.windowTimer = undefined;\n    this.iClosedWindow = false;\n    this._setupTimer();\n  }\n\n  _setupTimer(): void {\n    this.windowTimer = Number(\n      setInterval(() => {\n        if (this.window && this.window.closed) {\n          clearInterval(this.windowTimer);\n          if (!this.iClosedWindow) {\n            this.emit(\"close\");\n          }\n          this.iClosedWindow = false;\n          this.window = undefined;\n        }\n        if (this.window === undefined) clearInterval(this.windowTimer);\n      }, 500)\n    );\n  }\n\n  open(): Promise<void> {\n    this.window = window.open(this.url.href, this.target, this.features);\n    if (this.window?.focus) this.window.focus();\n    return Promise.resolve();\n  }\n\n  close(): void {\n    this.iClosedWindow = true;\n    if (this.window) this.window.close();\n  }\n\n  redirect(locationReplaceOnRedirect: boolean): void {\n    if (locationReplaceOnRedirect) {\n      window.location.replace(this.url.href);\n    } else {\n      window.location.href = this.url.href;\n    }\n  }\n}\n\nexport default PopupHandler;\n","import { COMMUNICATION_JRPC_METHODS, COMMUNICATION_NOTIFICATIONS, CommunicationWalletProviderState } from \"@toruslabs/base-controllers\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\nimport { EthereumRpcError } from \"eth-rpc-errors\";\nimport type { Duplex } from \"readable-stream\";\n\nimport BaseProvider from \"./baseProvider\";\nimport configuration from \"./config\";\nimport { documentReady, htmlToElement } from \"./embedUtils\";\nimport {\n  BUTTON_POSITION,\n  CommunicationProviderState,\n  EMBED_TRANSLATION_ITEM,\n  LOGIN_PROVIDER_TYPE,\n  ProviderOptions,\n  RequestArguments,\n  UnValidatedJsonRpcRequest,\n} from \"./interfaces\";\nimport log from \"./loglevel\";\nimport messages from \"./messages\";\nimport PopupHandler from \"./PopupHandler\";\nimport { FEATURES_CONFIRM_WINDOW, getPopupFeatures, getUserLanguage } from \"./utils\";\n\nclass TorusCommunicationProvider extends BaseProvider<CommunicationProviderState> {\n  protected static _defaultState: CommunicationProviderState = {\n    buttonPosition: \"bottom-left\",\n    currentLoginProvider: null,\n    isIFrameFullScreen: false,\n    hasEmittedConnection: false,\n\n    torusWidgetVisibility: false,\n    initialized: false,\n    isLoggedIn: false,\n    isPermanentlyDisconnected: false,\n    isConnected: false,\n  };\n\n  public embedTranslations: EMBED_TRANSLATION_ITEM;\n\n  public torusUrl: string;\n\n  public dappStorageKey: string;\n\n  public windowRefs: Record<string, PopupHandler>;\n\n  tryWindowHandle: (payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[], cb: (...args: unknown[]) => void) => void;\n\n  private torusAlertContainer: HTMLDivElement;\n\n  private torusIframe: HTMLIFrameElement;\n\n  constructor(connectionStream: Duplex, { maxEventListeners = 100, jsonRpcStreamName = \"provider\" }: ProviderOptions) {\n    super(connectionStream, { maxEventListeners, jsonRpcStreamName });\n\n    // private state\n    this._state = {\n      ...TorusCommunicationProvider._defaultState,\n    };\n\n    // public state\n    this.torusUrl = \"\";\n    this.dappStorageKey = \"\";\n    const languageTranslations = configuration.translations[getUserLanguage()];\n    this.embedTranslations = languageTranslations.embed;\n    this.windowRefs = {};\n\n    // setup own event listeners\n\n    // EIP-1193 connect\n    this.on(\"connect\", () => {\n      this._state.isConnected = true;\n    });\n\n    const notificationHandler = (payload: RequestArguments<Record<string, unknown>>) => {\n      const { method, params } = payload;\n      if (method === COMMUNICATION_NOTIFICATIONS.IFRAME_STATUS) {\n        const { isFullScreen, rid } = params;\n        this._displayIframe({ isFull: isFullScreen as boolean, rid: rid as string });\n      } else if (method === COMMUNICATION_NOTIFICATIONS.CREATE_WINDOW) {\n        const { windowId, url } = params as Record<string, string>;\n        this._createPopupBlockAlert(windowId, url);\n      } else if (method === COMMUNICATION_NOTIFICATIONS.CLOSE_WINDOW) {\n        this._handleCloseWindow(params);\n      } else if (method === COMMUNICATION_NOTIFICATIONS.USER_LOGGED_IN) {\n        const { currentLoginProvider } = params;\n        this._state.isLoggedIn = true;\n        this._state.currentLoginProvider = currentLoginProvider as LOGIN_PROVIDER_TYPE;\n      } else if (method === COMMUNICATION_NOTIFICATIONS.USER_LOGGED_OUT) {\n        this._state.isLoggedIn = false;\n        this._state.currentLoginProvider = null;\n        this._displayIframe();\n      }\n    };\n\n    this.jsonRpcConnectionEvents.on(\"notification\", notificationHandler);\n  }\n\n  get isLoggedIn(): boolean {\n    return this._state.isLoggedIn;\n  }\n\n  get isIFrameFullScreen(): boolean {\n    return this._state.isIFrameFullScreen;\n  }\n\n  /**\n   * Returns whether the inPage provider is connected to Torus.\n   */\n  isConnected(): boolean {\n    return this._state.isConnected;\n  }\n\n  async _initializeState(params: Record<string, unknown>): Promise<void> {\n    try {\n      const { torusUrl, dappStorageKey, torusAlertContainer, torusIframe } = params;\n      this.torusUrl = torusUrl as string;\n      this.dappStorageKey = dappStorageKey as string;\n      this.torusAlertContainer = torusAlertContainer as HTMLDivElement;\n      this.torusIframe = torusIframe as HTMLIFrameElement;\n      this.torusIframe.addEventListener(\"load\", () => {\n        // only do this if iframe is not full screen\n        if (!this._state.isIFrameFullScreen) this._displayIframe();\n      });\n      const { currentLoginProvider, isLoggedIn } = (await this.request({\n        method: COMMUNICATION_JRPC_METHODS.GET_PROVIDER_STATE,\n        params: [],\n      })) as CommunicationWalletProviderState;\n\n      // indicate that we've connected, for EIP-1193 compliance\n      this._handleConnect(currentLoginProvider, isLoggedIn);\n    } catch (error) {\n      log.error(\"Torus: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized communication state\");\n      this._state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n\n  _handleWindow(windowId: string, { url, target, features }: { url?: string; target?: string; features?: string } = {}): void {\n    const finalUrl = new URL(url || `${this.torusUrl}/redirect?windowId=${windowId}`);\n    if (this.dappStorageKey) {\n      // If multiple instances, it returns the first one\n      if (finalUrl.hash) finalUrl.hash += `&dappStorageKey=${this.dappStorageKey}`;\n      else finalUrl.hash = `#dappStorageKey=${this.dappStorageKey}`;\n    }\n    const handledWindow = new PopupHandler({ url: finalUrl, target, features });\n    handledWindow.open();\n    if (!handledWindow.window) {\n      this._createPopupBlockAlert(windowId, finalUrl.href);\n      return;\n    }\n    // Add to collection only if window is opened\n    this.windowRefs[windowId] = handledWindow;\n    // We tell the iframe that the window has been successfully opened\n    this.request<{ windowId: string }, unknown>({\n      method: COMMUNICATION_JRPC_METHODS.OPENED_WINDOW,\n      params: { windowId },\n    });\n    handledWindow.once(\"close\", () => {\n      // user closed the window\n      delete this.windowRefs[windowId];\n      this.request<{ windowId: string }, unknown>({\n        method: COMMUNICATION_JRPC_METHODS.CLOSED_WINDOW,\n        params: { windowId },\n      });\n    });\n  }\n\n  _displayIframe({ isFull = false, rid = \"\" }: { isFull?: boolean; rid?: string } = {}): void {\n    const style: Partial<CSSStyleDeclaration> = {};\n    // set phase\n    if (!isFull) {\n      style.display = this._state.torusWidgetVisibility ? \"block\" : \"none\";\n      style.height = \"70px\";\n      style.width = \"70px\";\n      switch (this._state.buttonPosition) {\n        case BUTTON_POSITION.TOP_LEFT:\n          style.top = \"0px\";\n          style.left = \"0px\";\n          style.right = \"auto\";\n          style.bottom = \"auto\";\n          break;\n        case BUTTON_POSITION.TOP_RIGHT:\n          style.top = \"0px\";\n          style.right = \"0px\";\n          style.left = \"auto\";\n          style.bottom = \"auto\";\n          break;\n        case BUTTON_POSITION.BOTTOM_RIGHT:\n          style.bottom = \"0px\";\n          style.right = \"0px\";\n          style.top = \"auto\";\n          style.left = \"auto\";\n          break;\n        case BUTTON_POSITION.BOTTOM_LEFT:\n        default:\n          style.bottom = \"0px\";\n          style.left = \"0px\";\n          style.top = \"auto\";\n          style.right = \"auto\";\n          break;\n      }\n    } else {\n      style.display = \"block\";\n      style.width = \"100%\";\n      style.height = \"100%\";\n      style.top = \"0px\";\n      style.right = \"0px\";\n      style.left = \"0px\";\n      style.bottom = \"0px\";\n    }\n    Object.assign(this.torusIframe.style, style);\n    this._state.isIFrameFullScreen = isFull;\n    this.request<{ isIFrameFullScreen: boolean; rid: string }, unknown>({\n      method: COMMUNICATION_JRPC_METHODS.IFRAME_STATUS,\n      params: { isIFrameFullScreen: isFull, rid },\n    });\n  }\n\n  hideTorusButton(): void {\n    this._state.torusWidgetVisibility = false;\n    this._displayIframe();\n  }\n\n  showTorusButton(): void {\n    this._state.torusWidgetVisibility = true;\n    this._displayIframe();\n  }\n\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound\n   */\n  protected _rpcRequest(payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[], callback: (...args: unknown[]) => void): void {\n    const cb = callback;\n    const _payload = payload;\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n    }\n    this.tryWindowHandle(_payload as JRPCRequest<unknown>[], cb);\n  }\n\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param currentLoginProvider - The login Provider\n   * emits TorusInpageProvider#connect\n   */\n  protected _handleConnect(currentLoginProvider: string, isLoggedIn: boolean): void {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit(\"connect\", { currentLoginProvider, isLoggedIn });\n      log.debug(messages.info.connected(currentLoginProvider));\n    }\n  }\n\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits TorusInpageProvider#disconnect\n   */\n  protected _handleDisconnect(isRecoverable: boolean, errorMessage?: string): void {\n    if (this._state.isConnected || (!this._state.isPermanentlyDisconnected && !isRecoverable)) {\n      this._state.isConnected = false;\n\n      let error: Error;\n      if (isRecoverable) {\n        error = new EthereumRpcError(\n          1013, // Try again later\n          errorMessage || messages.errors.disconnected()\n        );\n        log.debug(error);\n      } else {\n        error = new EthereumRpcError(\n          1011, // Internal error\n          errorMessage || messages.errors.permanentlyDisconnected()\n        );\n        log.error(error);\n        this._state.currentLoginProvider = null;\n        this._state.isLoggedIn = false;\n        this._state.torusWidgetVisibility = false;\n        this._state.isIFrameFullScreen = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n\n      this.emit(\"disconnect\", error);\n    }\n  }\n\n  // Called if the iframe wants to close the window cause it is done processing the request\n  private _handleCloseWindow(params: { windowId?: string }): void {\n    const { windowId } = params;\n    if (this.windowRefs[windowId]) {\n      this.windowRefs[windowId].close();\n      delete this.windowRefs[windowId];\n    }\n  }\n\n  private async _createPopupBlockAlert(windowId: string, url: string): Promise<void> {\n    const logoUrl = this.getLogoUrl();\n    const torusAlert = htmlToElement<HTMLDivElement>(\n      '<div id=\"torusAlert\" class=\"torus-alert--v2\">' +\n        `<div id=\"torusAlert__logo\"><img src=\"${logoUrl}\" /></div>` +\n        \"<div>\" +\n        `<h1 id=\"torusAlert__title\">${this.embedTranslations.actionRequired}</h1>` +\n        `<p id=\"torusAlert__desc\">${this.embedTranslations.pendingAction}</p>` +\n        \"</div>\" +\n        \"</div>\"\n    );\n\n    const successAlert = htmlToElement(`<div><a id=\"torusAlert__btn\">${this.embedTranslations.continue}</a></div>`);\n    const btnContainer = htmlToElement('<div id=\"torusAlert__btn-container\"></div>');\n    btnContainer.appendChild(successAlert);\n    torusAlert.appendChild(btnContainer);\n    const bindOnLoad = () => {\n      successAlert.addEventListener(\"click\", () => {\n        this._handleWindow(windowId, {\n          url,\n          target: \"_blank\",\n          features: getPopupFeatures(FEATURES_CONFIRM_WINDOW),\n        });\n        torusAlert.remove();\n        if (this.torusAlertContainer.children.length === 0) this.torusAlertContainer.style.display = \"none\";\n      });\n    };\n\n    const attachOnLoad = () => {\n      this.torusAlertContainer.appendChild(torusAlert);\n    };\n\n    await documentReady();\n    attachOnLoad();\n    bindOnLoad();\n    this.torusAlertContainer.style.display = \"block\";\n  }\n\n  private getLogoUrl(): string {\n    const logoUrl = `${this.torusUrl}/images/torus_icon-blue.svg`;\n    return logoUrl;\n  }\n}\n\nexport default TorusCommunicationProvider;\n","import { InPageWalletProviderState, PROVIDER_JRPC_METHODS, PROVIDER_NOTIFICATIONS } from \"@toruslabs/base-controllers\";\nimport { JRPCRequest, JRPCSuccess } from \"@toruslabs/openlogin-jrpc\";\nimport { EthereumRpcError } from \"eth-rpc-errors\";\nimport dequal from \"fast-deep-equal\";\nimport type { Duplex } from \"readable-stream\";\n\nimport BaseProvider from \"./baseProvider\";\nimport { InPageProviderState, ProviderOptions, RequestArguments, UnValidatedJsonRpcRequest } from \"./interfaces\";\nimport log from \"./loglevel\";\nimport messages from \"./messages\";\n\nclass TorusInPageProvider extends BaseProvider<InPageProviderState> {\n  protected static _defaultState: InPageProviderState = {\n    accounts: null,\n    isConnected: false,\n    isUnlocked: false,\n    initialized: false,\n    isPermanentlyDisconnected: false,\n    hasEmittedConnection: false,\n  };\n\n  /**\n   * The chain ID of the currently connected Solana chain.\n   * See [chainId.network]{@link https://chainid.network} for more information.\n   */\n  public chainId: string | null;\n\n  /**\n   * The user's currently selected Solana address.\n   * If null, Torus is either locked or the user has not permitted any\n   * addresses to be viewed.\n   */\n  public selectedAddress: string | null;\n\n  tryWindowHandle: (payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[], cb: (...args: unknown[]) => void) => void;\n\n  constructor(connectionStream: Duplex, { maxEventListeners = 100, jsonRpcStreamName = \"provider\" }: ProviderOptions) {\n    super(connectionStream, { maxEventListeners, jsonRpcStreamName });\n\n    // private state\n    this._state = {\n      ...TorusInPageProvider._defaultState,\n    };\n\n    // public state\n    this.selectedAddress = null;\n    this.chainId = null;\n\n    this._handleAccountsChanged = this._handleAccountsChanged.bind(this);\n    this._handleChainChanged = this._handleChainChanged.bind(this);\n    this._handleUnlockStateChanged = this._handleUnlockStateChanged.bind(this);\n\n    // setup own event listeners\n\n    // EIP-1193 connect\n    this.on(\"connect\", () => {\n      this._state.isConnected = true;\n    });\n\n    const jsonRpcNotificationHandler = (payload: RequestArguments<unknown[] | Record<string, unknown>>) => {\n      const { method, params } = payload;\n      if (method === PROVIDER_NOTIFICATIONS.ACCOUNTS_CHANGED) {\n        this._handleAccountsChanged(params as unknown[]);\n      } else if (method === PROVIDER_NOTIFICATIONS.UNLOCK_STATE_CHANGED) {\n        this._handleUnlockStateChanged(params as Record<string, unknown>);\n      } else if (method === PROVIDER_NOTIFICATIONS.CHAIN_CHANGED) {\n        this._handleChainChanged(params as Record<string, unknown>);\n      }\n    };\n\n    // json rpc notification listener\n    this.jsonRpcConnectionEvents.on(\"notification\", jsonRpcNotificationHandler);\n  }\n\n  /**\n   * Returns whether the inpage provider is connected to Torus.\n   */\n  isConnected(): boolean {\n    return this._state.isConnected;\n  }\n\n  // Private Methods\n  //= ===================\n  /**\n   * Constructor helper.\n   * Populates initial state by calling 'wallet_getProviderState' and emits\n   * necessary events.\n   */\n  async _initializeState(): Promise<void> {\n    try {\n      const { accounts, chainId, isUnlocked } = (await this.request({\n        method: PROVIDER_JRPC_METHODS.GET_PROVIDER_STATE,\n        params: [],\n      })) as InPageWalletProviderState;\n\n      // indicate that we've connected, for EIP-1193 compliance\n      this.emit(\"connect\", { chainId });\n\n      this._handleChainChanged({ chainId });\n      this._handleUnlockStateChanged({ accounts, isUnlocked });\n      this._handleAccountsChanged(accounts);\n    } catch (error) {\n      log.error(\"Torus: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized provider state\");\n      this._state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound\n   */\n  _rpcRequest(payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[], callback: (...args: unknown[]) => void, isInternal = false): void {\n    let cb = callback;\n    const _payload = payload;\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n\n      if (_payload.method === \"solana_accounts\" || _payload.method === \"solana_requestAccounts\") {\n        // handle accounts changing\n        cb = (err: Error, res: JRPCSuccess<string[]>) => {\n          this._handleAccountsChanged(res.result || [], _payload.method === \"solana_accounts\", isInternal);\n          callback(err, res);\n        };\n      } else if (_payload.method === \"wallet_getProviderState\") {\n        this._rpcEngine.handle(payload as JRPCRequest<unknown>, cb);\n        return;\n      }\n    }\n    this.tryWindowHandle(_payload, cb);\n  }\n\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param chainId - The ID of the newly connected chain.\n   * emits TorusInpageProvider#connect\n   */\n  protected _handleConnect(chainId: string): void {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit(\"connect\", { chainId });\n      log.debug(messages.info.connected(chainId));\n    }\n  }\n\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits TorusInpageProvider#disconnect\n   */\n  protected _handleDisconnect(isRecoverable: boolean, errorMessage?: string): void {\n    if (this._state.isConnected || (!this._state.isPermanentlyDisconnected && !isRecoverable)) {\n      this._state.isConnected = false;\n\n      let error: Error;\n      if (isRecoverable) {\n        error = new EthereumRpcError(\n          1013, // Try again later\n          errorMessage || messages.errors.disconnected()\n        );\n        log.debug(error);\n      } else {\n        error = new EthereumRpcError(\n          1011, // Internal error\n          errorMessage || messages.errors.permanentlyDisconnected()\n        );\n        log.error(error);\n        this.chainId = null;\n        this._state.accounts = null;\n        this.selectedAddress = null;\n        this._state.isUnlocked = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n\n      this.emit(\"disconnect\", error);\n    }\n  }\n\n  /**\n   * Called when accounts may have changed.\n   */\n  protected _handleAccountsChanged(accounts: unknown[], isEthAccounts = false, isInternal = false): void {\n    // defensive programming\n    let finalAccounts = accounts;\n    if (!Array.isArray(finalAccounts)) {\n      log.error(\"Torus: Received non-array accounts parameter. Please report this bug.\", finalAccounts);\n      finalAccounts = [];\n    }\n\n    for (const account of accounts) {\n      if (typeof account !== \"string\") {\n        log.error(\"Torus: Received non-string account. Please report this bug.\", accounts);\n        finalAccounts = [];\n        break;\n      }\n    }\n\n    // emit accountsChanged if anything about the accounts array has changed\n    if (!dequal(this._state.accounts, finalAccounts)) {\n      // we should always have the correct accounts even before solana_accounts\n      // returns, except in cases where isInternal is true\n      if (isEthAccounts && Array.isArray(this._state.accounts) && this._state.accounts.length > 0 && !isInternal) {\n        log.error('Torus: \"solana_accounts\" unexpectedly updated accounts. Please report this bug.', finalAccounts);\n      }\n\n      this._state.accounts = finalAccounts as string[];\n      this.emit(\"accountsChanged\", finalAccounts);\n    }\n\n    // handle selectedAddress\n    if (this.selectedAddress !== finalAccounts[0]) {\n      this.selectedAddress = (finalAccounts[0] as string) || null;\n    }\n  }\n\n  /**\n   * Upon receipt of a new chainId and networkVersion, emits corresponding\n   * events and sets relevant public state.\n   * Does nothing if neither the chainId nor the networkVersion are different\n   * from existing values.\n   *\n   * emits TorusInpageProvider#chainChanged\n   * @param networkInfo - An object with network info.\n   */\n  protected _handleChainChanged({ chainId }: { chainId?: string } = {}): void {\n    if (!chainId) {\n      log.error(\"Torus: Received invalid network parameters. Please report this bug.\", { chainId });\n      return;\n    }\n\n    if (chainId === \"loading\") {\n      this._handleDisconnect(true);\n    } else {\n      this._handleConnect(chainId);\n\n      if (chainId !== this.chainId) {\n        this.chainId = chainId;\n        if (this._state.initialized) {\n          this.emit(\"chainChanged\", this.chainId);\n        }\n      }\n    }\n  }\n\n  /**\n   * Upon receipt of a new isUnlocked state, sets relevant public state.\n   * Calls the accounts changed handler with the received accounts, or an empty\n   * array.\n   *\n   * Does nothing if the received value is equal to the existing value.\n   * There are no lock/unlock events.\n   *\n   * @param opts - Options bag.\n   */\n  protected _handleUnlockStateChanged({ accounts, isUnlocked }: { accounts?: string[]; isUnlocked?: boolean } = {}): void {\n    if (typeof isUnlocked !== \"boolean\") {\n      log.error(\"Torus: Received invalid isUnlocked parameter. Please report this bug.\", { isUnlocked });\n      return;\n    }\n\n    if (isUnlocked !== this._state.isUnlocked) {\n      this._state.isUnlocked = isUnlocked;\n      this._handleAccountsChanged(accounts || []);\n    }\n  }\n}\n\nexport default TorusInPageProvider;\n","/**\n * Returns whether the given image URL exists\n */\nfunction imgExists(url: string): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      const img = document.createElement(\"img\");\n      img.onload = () => resolve(true);\n      img.onerror = () => resolve(false);\n      img.src = url;\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n\n/**\n * Extracts a name for the site from the DOM\n */\nconst getSiteName = (window: Window): string => {\n  const { document } = window;\n\n  const siteName = document.querySelector<HTMLMetaElement>('head > meta[property=\"og:site_name\"]');\n  if (siteName) {\n    return siteName.content;\n  }\n\n  const metaTitle = document.querySelector<HTMLMetaElement>('head > meta[name=\"title\"]');\n  if (metaTitle) {\n    return metaTitle.content;\n  }\n\n  if (document.title && document.title.length > 0) {\n    return document.title;\n  }\n\n  return window.location.hostname;\n};\n\n/**\n * Extracts an icon for the site from the DOM\n */\nasync function getSiteIcon(window: Window): Promise<string> {\n  try {\n    const { document } = window;\n\n    // Use the site's favicon if it exists\n    let icon = document.querySelector<HTMLLinkElement>('head > link[rel=\"shortcut icon\"]');\n    if (icon && (await imgExists(icon.href))) {\n      return icon.href;\n    }\n\n    // Search through available icons in no particular order\n    icon = Array.from(document.querySelectorAll<HTMLLinkElement>('head > link[rel=\"icon\"]')).find((_icon) => Boolean(_icon.href));\n    if (icon && (await imgExists(icon.href))) {\n      return icon.href;\n    }\n\n    return \"\";\n  } catch (error) {\n    return \"\";\n  }\n}\n\n/**\n * Gets site metadata and returns it\n *\n */\nconst getSiteMetadata = async (): Promise<{ name: string; icon: string }> => ({\n  name: getSiteName(window),\n  icon: await getSiteIcon(window),\n});\n\nexport default getSiteMetadata;\n","import { PublicKey, SignaturePubkeyPair, Transaction } from \"@solana/web3.js\";\nimport { COMMUNICATION_JRPC_METHODS } from \"@toruslabs/base-controllers\";\nimport { setAPIKey } from \"@toruslabs/http-helpers\";\nimport { BasePostMessageStream, getRpcPromiseCallback, JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\n\nimport TorusCommunicationProvider from \"./communicationProvider\";\nimport configuration from \"./config\";\nimport { documentReady, htmlToElement } from \"./embedUtils\";\nimport TorusInPageProvider from \"./inPageProvider\";\nimport {\n  BUTTON_POSITION,\n  LOGIN_PROVIDER_TYPE,\n  NetworkInterface,\n  PAYMENT_PROVIDER_TYPE,\n  PaymentParams,\n  TORUS_BUILD_ENV,\n  TorusCtorArgs,\n  TorusLoginParams,\n  TorusParams,\n  UnValidatedJsonRpcRequest,\n  UserInfo,\n  WALLET_PATH,\n} from \"./interfaces\";\nimport log from \"./loglevel\";\nimport PopupHandler from \"./PopupHandler\";\nimport getSiteMetadata from \"./siteMetadata\";\nimport {\n  FEATURES_CONFIRM_WINDOW,\n  FEATURES_DEFAULT_WALLET_WINDOW,\n  FEATURES_PROVIDER_CHANGE_WINDOW,\n  getPopupFeatures,\n  getTorusUrl,\n  getWindowId,\n  storageAvailable,\n} from \"./utils\";\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst { version } = require(\"../package.json\");\nconst PROVIDER_UNSAFE_METHODS = [\"send_transaction\", \"sign_transaction\", \"sign_all_transactions\", \"sign_message\", \"connect\"];\nconst COMMUNICATION_UNSAFE_METHODS = [COMMUNICATION_JRPC_METHODS.SET_PROVIDER];\n\nconst isLocalStorageAvailable = storageAvailable(\"localStorage\");\n\n// preload for iframe doesn't work https://bugs.chromium.org/p/chromium/issues/detail?id=593267\n(async function preLoadIframe() {\n  try {\n    if (typeof document === \"undefined\") return;\n    const torusIframeHtml = document.createElement(\"link\");\n    const { torusUrl } = await getTorusUrl(\"production\");\n    torusIframeHtml.href = `${torusUrl}/frame`;\n    torusIframeHtml.crossOrigin = \"anonymous\";\n    torusIframeHtml.type = \"text/html\";\n    torusIframeHtml.rel = \"prefetch\";\n    if (torusIframeHtml.relList && torusIframeHtml.relList.supports) {\n      if (torusIframeHtml.relList.supports(\"prefetch\")) {\n        document.head.appendChild(torusIframeHtml);\n      }\n    }\n  } catch (error) {\n    log.warn(error);\n  }\n})();\n\nclass Torus {\n  isInitialized: boolean;\n\n  torusAlert: HTMLDivElement;\n\n  modalZIndex: number;\n\n  alertZIndex: number;\n\n  public requestedLoginProvider?: LOGIN_PROVIDER_TYPE;\n\n  provider: TorusInPageProvider;\n\n  communicationProvider: TorusCommunicationProvider;\n\n  dappStorageKey: string;\n\n  private torusAlertContainer: HTMLDivElement;\n\n  private torusUrl: string;\n\n  private torusIframe: HTMLIFrameElement;\n\n  private styleLink: HTMLLinkElement;\n\n  constructor({ modalZIndex = 99999 }: TorusCtorArgs = {}) {\n    this.torusUrl = \"\";\n    this.isInitialized = false; // init done\n    this.requestedLoginProvider = null;\n    this.modalZIndex = modalZIndex;\n    this.alertZIndex = modalZIndex + 1000;\n    this.dappStorageKey = \"\";\n  }\n\n  get isLoggedIn(): boolean {\n    if (!this.communicationProvider) return false;\n    return this.communicationProvider.isLoggedIn;\n  }\n\n  async init({\n    buildEnv = TORUS_BUILD_ENV.PRODUCTION,\n    enableLogging = false,\n    network,\n    showTorusButton = false,\n    useLocalStorage = false,\n    buttonPosition = BUTTON_POSITION.BOTTOM_LEFT,\n    apiKey = \"torus-default\",\n    extraParams = {},\n  }: TorusParams = {}): Promise<void> {\n    if (this.isInitialized) throw new Error(\"Already initialized\");\n    setAPIKey(apiKey);\n    const { torusUrl, logLevel } = await getTorusUrl(buildEnv);\n    log.enableAll();\n    log.info(torusUrl, \"url loaded\");\n    log.info(`Solana Embed Version :${version}`);\n    this.torusUrl = torusUrl;\n    log.setDefaultLevel(logLevel);\n    if (enableLogging) log.enableAll();\n    else log.disableAll();\n\n    const dappStorageKey = this.handleDappStorageKey(useLocalStorage);\n\n    const torusIframeUrl = new URL(torusUrl);\n    if (torusIframeUrl.pathname.endsWith(\"/\")) torusIframeUrl.pathname += \"frame\";\n    else torusIframeUrl.pathname += \"/frame\";\n\n    const hashParams = new URLSearchParams();\n    if (dappStorageKey) hashParams.append(\"dappStorageKey\", dappStorageKey);\n    hashParams.append(\"origin\", window.location.origin);\n\n    torusIframeUrl.hash = hashParams.toString();\n\n    // Iframe code\n    this.torusIframe = htmlToElement<HTMLIFrameElement>(\n      `<iframe\n        id=\"torusIframe\"\n        class=\"torusIframe\"\n        src=\"${torusIframeUrl.href}\"\n        style=\"display: none; position: fixed; top: 0; right: 0; width: 100%;\n        height: 100%; border: none; border-radius: 0; z-index: ${this.modalZIndex.toString()}\"\n      ></iframe>`\n    );\n\n    this.torusAlertContainer = htmlToElement<HTMLDivElement>(\n      `<div id=\"torusAlertContainer\" style=\"display:none; z-index: ${this.alertZIndex.toString()}\"></div>`\n    );\n\n    this.styleLink = htmlToElement<HTMLLinkElement>(`<link href=\"${torusUrl}/css/widget.css\" rel=\"stylesheet\" type=\"text/css\">`);\n    const handleSetup = async () => {\n      return new Promise<void>((resolve, reject) => {\n        try {\n          window.document.head.appendChild(this.styleLink);\n          window.document.body.appendChild(this.torusIframe);\n          window.document.body.appendChild(this.torusAlertContainer);\n          this.torusIframe.addEventListener(\"load\", async () => {\n            const dappMetadata = await getSiteMetadata();\n            // send init params here\n            this.torusIframe.contentWindow.postMessage(\n              {\n                buttonPosition,\n                apiKey,\n                network,\n                dappMetadata,\n                extraParams,\n              },\n              torusIframeUrl.origin\n            );\n            await this._setupWeb3({\n              torusUrl,\n            });\n            if (showTorusButton) this.showTorusButton();\n            else this.hideTorusButton();\n            this.isInitialized = true;\n            (window as any).torus = this;\n            resolve();\n          });\n        } catch (error) {\n          reject(error);\n        }\n      });\n    };\n\n    await documentReady();\n    await handleSetup();\n  }\n\n  async login(params: TorusLoginParams = {}): Promise<string[]> {\n    if (!this.isInitialized) throw new Error(\"Call init() first\");\n    try {\n      this.requestedLoginProvider = params.loginProvider || null;\n      if (!this.requestedLoginProvider) {\n        this.communicationProvider._displayIframe({ isFull: true });\n      }\n      // If user is already logged in, we assume they have given access to the website\n      const res = await new Promise((resolve, reject) => {\n        // We use this method because we want to update inPage provider state with account info\n        this.provider._rpcRequest(\n          { method: \"solana_requestAccounts\", params: [this.requestedLoginProvider, params.login_hint] },\n          getRpcPromiseCallback(resolve, reject)\n        );\n      });\n\n      if (Array.isArray(res) && res.length > 0) {\n        return res;\n      }\n      // This would never happen, but just in case\n      throw new Error(\"Login failed\");\n    } catch (error) {\n      log.error(\"login failed\", error);\n      throw error;\n    } finally {\n      if (this.communicationProvider.isIFrameFullScreen) this.communicationProvider._displayIframe();\n    }\n  }\n\n  async loginWithPrivateKey(loginParams: { privateKey: string; userInfo: UserInfo }): Promise<void> {\n    if (!this.isInitialized) throw new Error(\"Call init() first\");\n    const { privateKey, userInfo } = loginParams;\n    const { success } = await this.communicationProvider.request<{ privateKey: string; userInfo: UserInfo }, { success: boolean }>({\n      method: \"login_with_private_key\",\n      params: {\n        privateKey,\n        userInfo,\n      },\n    });\n    if (!success) throw new Error(\"Login Failed\");\n  }\n\n  async logout(): Promise<void> {\n    if (!this.communicationProvider.isLoggedIn) throw new Error(\"Not logged in\");\n\n    await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.LOGOUT,\n      params: [],\n    });\n    this.requestedLoginProvider = null;\n  }\n\n  async cleanUp(): Promise<void> {\n    if (this.communicationProvider.isLoggedIn) {\n      await this.logout();\n    }\n    this.clearInit();\n  }\n\n  clearInit(): void {\n    function isElement(element: unknown) {\n      return element instanceof Element || element instanceof Document;\n    }\n    if (isElement(this.styleLink) && window.document.body.contains(this.styleLink)) {\n      this.styleLink.remove();\n      this.styleLink = undefined;\n    }\n    if (isElement(this.torusIframe) && window.document.body.contains(this.torusIframe)) {\n      this.torusIframe.remove();\n      this.torusIframe = undefined;\n    }\n    if (isElement(this.torusAlertContainer) && window.document.body.contains(this.torusAlertContainer)) {\n      this.torusAlert = undefined;\n      this.torusAlertContainer.remove();\n      this.torusAlertContainer = undefined;\n    }\n    this.isInitialized = false;\n  }\n\n  hideTorusButton(): void {\n    this.communicationProvider.hideTorusButton();\n  }\n\n  showTorusButton(): void {\n    this.communicationProvider.showTorusButton();\n  }\n\n  async setProvider(params: NetworkInterface): Promise<void> {\n    await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.SET_PROVIDER,\n      params: { ...params },\n    });\n  }\n\n  async showWallet(path: WALLET_PATH, params: Record<string, string> = {}): Promise<void> {\n    const instanceId = await this.communicationProvider.request<[], string>({\n      method: COMMUNICATION_JRPC_METHODS.WALLET_INSTANCE_ID,\n      params: [],\n    });\n    const finalPath = path ? `/${path}` : \"\";\n\n    const finalUrl = new URL(`${this.torusUrl}/wallet${finalPath}`);\n    // Using URL constructor to prevent js injection and allow parameter validation.!\n    finalUrl.searchParams.append(\"instanceId\", instanceId);\n    Object.keys(params).forEach((x) => {\n      finalUrl.searchParams.append(x, params[x]);\n    });\n    if (this.dappStorageKey) {\n      finalUrl.hash = `#dappStorageKey=${this.dappStorageKey}`;\n    }\n    // No need to track this window state. Hence, no _handleWindow call.\n    const walletWindow = new PopupHandler({ url: finalUrl, features: getPopupFeatures(FEATURES_DEFAULT_WALLET_WINDOW) });\n    walletWindow.open();\n  }\n\n  async getUserInfo(): Promise<UserInfo> {\n    const userInfoResponse = await this.communicationProvider.request<[], UserInfo>({\n      method: COMMUNICATION_JRPC_METHODS.USER_INFO,\n      params: [],\n    });\n    return userInfoResponse as UserInfo;\n  }\n\n  async initiateTopup(provider: PAYMENT_PROVIDER_TYPE, params: PaymentParams): Promise<boolean> {\n    if (!this.isInitialized) throw new Error(\"Torus is not initialized\");\n    const windowId = getWindowId();\n    this.communicationProvider._handleWindow(windowId);\n    const topupResponse = await this.communicationProvider.request<\n      { provider: PAYMENT_PROVIDER_TYPE; params: PaymentParams; windowId: string },\n      boolean\n    >({\n      method: COMMUNICATION_JRPC_METHODS.TOPUP,\n      params: { provider, params, windowId },\n    });\n    return topupResponse;\n  }\n\n  // Solana specific API\n  async getAccounts() {\n    const response = (await this.provider.request({\n      method: \"getAccounts\",\n      params: [],\n    })) as string[];\n    return response;\n  }\n\n  async sendTransaction(transaction: Transaction): Promise<string> {\n    const response = (await this.provider.request({\n      method: \"send_transaction\",\n      params: { message: transaction.serialize({ requireAllSignatures: false }).toString(\"hex\") },\n    })) as string;\n    return response;\n  }\n\n  async signTransaction(transaction: Transaction): Promise<Transaction> {\n    const response: string = (await this.provider.request({\n      method: \"sign_transaction\",\n      params: { message: transaction.serializeMessage().toString(\"hex\"), messageOnly: true },\n    })) as string;\n\n    // reconstruct signature pair\n    const parsed = JSON.parse(response);\n    const signature: SignaturePubkeyPair = { publicKey: new PublicKey(parsed.publicKey), signature: Buffer.from(parsed.signature, \"hex\") };\n    transaction.addSignature(signature.publicKey, signature.signature);\n    return transaction;\n  }\n\n  async signAllTransactions(transactions: Transaction[]): Promise<Transaction[]> {\n    const encodedMessage: string[] = transactions.map((tx) => {\n      return tx.serializeMessage().toString(\"hex\");\n    });\n    const responses: string[] = await this.provider.request({\n      method: \"sign_all_transactions\",\n      params: { message: encodedMessage, messageOnly: true },\n    });\n\n    // reconstruct signature pairs\n    const signatures: SignaturePubkeyPair[] = responses.map((item) => {\n      const parsed = JSON.parse(item);\n      return { publicKey: new PublicKey(parsed.publicKey), signature: Buffer.from(parsed.signature, \"hex\") };\n    });\n\n    transactions.forEach((tx, idx) => {\n      tx.addSignature(signatures[idx].publicKey, signatures[idx].signature);\n      return tx;\n    });\n    return transactions;\n  }\n\n  async signMessage(data: Uint8Array): Promise<Uint8Array> {\n    const response = (await this.provider.request({\n      method: \"sign_message\",\n      params: {\n        data,\n      },\n    })) as Uint8Array;\n    return response;\n  }\n\n  async getGaslessPublicKey(): Promise<string> {\n    const response = (await this.provider.request({\n      method: \"get_gasless_public_key\",\n      params: [],\n    })) as string;\n    return response;\n  }\n\n  // async connect(): Promise<boolean> {\n  //   const response = (await this.provider.request({\n  //     method: \"connect\",\n  //     params: {},\n  //   })) as boolean;\n  //   return response;\n  // }\n\n  private handleDappStorageKey(useLocalStorage: boolean) {\n    let dappStorageKey = \"\";\n    if (isLocalStorageAvailable && useLocalStorage) {\n      const storedKey = window.localStorage.getItem(configuration.localStorageKey);\n      if (storedKey) dappStorageKey = storedKey;\n      else {\n        const generatedKey = `torus-app-${getWindowId()}`;\n        window.localStorage.setItem(configuration.localStorageKey, generatedKey);\n        dappStorageKey = generatedKey;\n      }\n    }\n    this.dappStorageKey = dappStorageKey;\n    return dappStorageKey;\n  }\n\n  private async _setupWeb3(providerParams: { torusUrl: string }): Promise<void> {\n    log.info(\"setupWeb3 running\");\n    // setup background connection\n    const providerStream = new BasePostMessageStream({\n      name: \"embed_torus\",\n      target: \"iframe_torus\",\n      targetWindow: this.torusIframe.contentWindow,\n    });\n\n    // We create another LocalMessageDuplexStream for communication between dapp <> iframe\n    const communicationStream = new BasePostMessageStream({\n      name: \"embed_communication\",\n      target: \"iframe_communication\",\n      targetWindow: this.torusIframe.contentWindow,\n    });\n\n    // compose the inPage provider\n    const inPageProvider = new TorusInPageProvider(providerStream, {});\n    const communicationProvider = new TorusCommunicationProvider(communicationStream, {});\n\n    inPageProvider.tryWindowHandle = (payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[], cb: (...args: unknown[]) => void) => {\n      const _payload = payload;\n      if (!Array.isArray(_payload) && PROVIDER_UNSAFE_METHODS.includes(_payload.method)) {\n        if (!this.communicationProvider.isLoggedIn) throw new Error(\"User Not Logged In\");\n        const windowId = getWindowId();\n        communicationProvider._handleWindow(windowId, {\n          target: \"_blank\",\n          features: getPopupFeatures(FEATURES_CONFIRM_WINDOW),\n        });\n        // for inPageProvider methods sending windowId in request instead of params\n        // as params might be positional.\n        _payload.windowId = windowId;\n      }\n      inPageProvider._rpcEngine.handle(_payload as JRPCRequest<unknown>[], cb);\n    };\n\n    communicationProvider.tryWindowHandle = (payload: JRPCRequest<unknown>, cb: (...args: unknown[]) => void) => {\n      const _payload = payload;\n      if (!Array.isArray(_payload) && COMMUNICATION_UNSAFE_METHODS.includes(_payload.method)) {\n        const windowId = getWindowId();\n        communicationProvider._handleWindow(windowId, {\n          target: \"_blank\",\n          features: getPopupFeatures(FEATURES_PROVIDER_CHANGE_WINDOW), // todo: are these features generic for all\n        });\n        // for communication methods sending window id in jrpc req params\n        (_payload.params as Record<string, unknown>).windowId = windowId;\n      }\n      communicationProvider._rpcEngine.handle(_payload as JRPCRequest<unknown>, cb);\n    };\n\n    // detect solana_requestAccounts and pipe to enable for now\n    const detectAccountRequestPrototypeModifier = (m) => {\n      const originalMethod = inPageProvider[m];\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      const self = this;\n      inPageProvider[m] = function providerFunc(request, cb) {\n        const { method, params = [] } = request;\n        if (method === \"solana_requestAccounts\") {\n          if (!cb) return self.login({ loginProvider: params[0] });\n          self\n            .login({ loginProvider: params[0] })\n            // eslint-disable-next-line promise/no-callback-in-promise\n            .then((res) => cb(null, res))\n            // eslint-disable-next-line promise/no-callback-in-promise\n            .catch((err) => cb(err));\n        }\n        return originalMethod.apply(this, [request, cb]);\n      };\n    };\n\n    // Detects call to solana_requestAccounts in request & sendAsync and passes to login\n    detectAccountRequestPrototypeModifier(\"request\");\n    detectAccountRequestPrototypeModifier(\"sendAsync\");\n    detectAccountRequestPrototypeModifier(\"send\");\n\n    const proxiedInPageProvider = new Proxy(inPageProvider, {\n      // straight up lie that we deleted the property so that it doesn't\n      // throw an error in strict mode\n      deleteProperty: () => true,\n    });\n\n    const proxiedCommunicationProvider = new Proxy(communicationProvider, {\n      // straight up lie that we deleted the property so that it doesn't\n      // throw an error in strict mode\n      deleteProperty: () => true,\n    });\n\n    this.provider = proxiedInPageProvider;\n    this.communicationProvider = proxiedCommunicationProvider;\n\n    await Promise.all([\n      inPageProvider._initializeState(),\n      communicationProvider._initializeState({\n        ...providerParams,\n        dappStorageKey: this.dappStorageKey,\n        torusAlertContainer: this.torusAlertContainer,\n        torusIframe: this.torusIframe,\n      }),\n    ]);\n    log.debug(\"Torus - injected provider\");\n  }\n}\n\nexport default Torus;\n","import {\n  ADAPTER_STATUS,\n  BaseAdapter,\n  checkIfTokenIsExpired,\n  clearToken,\n  getSavedToken,\n  saveToken,\n  signChallenge,\n  UserAuthInfo,\n  verifySignedChallenge,\n  WalletLoginError,\n} from \"@web3auth/base\";\nimport bs58 from \"bs58\";\n\nexport abstract class BaseSolanaAdapter<T> extends BaseAdapter<T> {\n  async authenticateUser(): Promise<UserAuthInfo> {\n    if (!this.provider || !this.chainConfig?.chainId) throw WalletLoginError.notConnectedError();\n\n    const { chainNamespace, chainId } = this.chainConfig;\n\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n    const accounts = await this.provider.request<string[]>({\n      method: \"getAccounts\",\n    });\n    if (accounts && accounts.length > 0) {\n      const existingToken = getSavedToken(accounts[0] as string, this.name);\n      if (existingToken) {\n        const isExpired = checkIfTokenIsExpired(existingToken);\n        if (!isExpired) {\n          return { idToken: existingToken };\n        }\n      }\n\n      const payload = {\n        domain: window.location.origin,\n        uri: window.location.href,\n        address: accounts[0],\n        chainId: parseInt(chainId, 16),\n        version: \"1\",\n        nonce: Math.random().toString(36).slice(2),\n        issuedAt: new Date().toISOString(),\n      };\n\n      const challenge = await signChallenge(payload, chainNamespace);\n      const encodedMessage = new TextEncoder().encode(challenge);\n      const signedMessage = await this.provider.request<Uint8Array>({\n        method: \"signMessage\",\n        params: {\n          message: encodedMessage,\n          display: \"utf8\",\n        },\n      });\n      const idToken = await verifySignedChallenge(chainNamespace, bs58.encode(signedMessage as Uint8Array), challenge, this.name, this.sessionTime);\n      saveToken(accounts[0] as string, this.name, idToken);\n      return {\n        idToken,\n      };\n    }\n    throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n  }\n\n  async disconnect(): Promise<void> {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.disconnectionError(\"Not connected with wallet\");\n    const accounts = await this.provider.request<string[]>({\n      method: \"getAccounts\",\n    });\n    if (accounts && accounts.length > 0) {\n      clearToken(accounts[0], this.name);\n    }\n  }\n}\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) {\n    } else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength)\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source)\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = new Uint8Array(zeroes + (size - it4))\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","const basex = require('base-x')\nconst ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","import Torus, { NetworkInterface, TorusCtorArgs, TorusLoginParams, TorusParams } from \"@toruslabs/solana-embed\";\nimport {\n  ADAPTER_CATEGORY,\n  ADAPTER_CATEGORY_TYPE,\n  ADAPTER_EVENTS,\n  ADAPTER_NAMESPACES,\n  ADAPTER_STATUS,\n  ADAPTER_STATUS_TYPE,\n  AdapterInitOptions,\n  AdapterNamespaceType,\n  CHAIN_NAMESPACES,\n  ChainNamespaceType,\n  CONNECTED_EVENT_DATA,\n  CustomChainConfig,\n  getChainConfig,\n  log,\n  SafeEventEmitterProvider,\n  UserInfo,\n  WALLET_ADAPTERS,\n  WalletInitializationError,\n  WalletLoginError,\n  Web3AuthError,\n} from \"@web3auth/base\";\nimport { BaseSolanaAdapter } from \"@web3auth/base-solana-adapter\";\nimport { ITorusWalletProvider, TorusInjectedProvider } from \"@web3auth/solana-provider\";\n\nexport interface SolanaWalletOptions {\n  adapterSettings?: TorusCtorArgs;\n  loginSettings?: TorusLoginParams;\n  initParams?: Omit<TorusParams, \"network\">;\n  chainConfig?: CustomChainConfig;\n  sessionTime?: number;\n}\n\nexport class SolanaWalletAdapter extends BaseSolanaAdapter<void> {\n  readonly name: string = WALLET_ADAPTERS.TORUS_SOLANA;\n\n  readonly adapterNamespace: AdapterNamespaceType = ADAPTER_NAMESPACES.SOLANA;\n\n  readonly currentChainNamespace: ChainNamespaceType = CHAIN_NAMESPACES.SOLANA;\n\n  readonly type: ADAPTER_CATEGORY_TYPE = ADAPTER_CATEGORY.EXTERNAL;\n\n  public status: ADAPTER_STATUS_TYPE = ADAPTER_STATUS.NOT_READY;\n\n  public torusInstance: Torus | null = null;\n\n  private torusWalletOptions?: TorusCtorArgs;\n\n  private initParams?: TorusParams;\n\n  private loginSettings?: TorusLoginParams = {};\n\n  private solanaProvider: TorusInjectedProvider | null = null;\n\n  private rehydrated = false;\n\n  constructor(params: SolanaWalletOptions = {}) {\n    super();\n    this.torusWalletOptions = params.adapterSettings || {};\n    this.initParams = params.initParams || {};\n    this.loginSettings = params.loginSettings || {};\n    this.chainConfig = params.chainConfig || null;\n    this.sessionTime = params.sessionTime || 86400;\n  }\n\n  get provider(): SafeEventEmitterProvider | null {\n    if (this.status === ADAPTER_STATUS.CONNECTED && this.solanaProvider) {\n      return this.solanaProvider?.provider || null;\n    }\n    return null;\n  }\n\n  set provider(_: SafeEventEmitterProvider | null) {\n    throw new Error(\"Not implemented\");\n  }\n\n  async init(options: AdapterInitOptions): Promise<void> {\n    super.checkInitializationRequirements();\n    // set chainConfig for mainnet by default if not set\n    let network: NetworkInterface;\n    if (!this.chainConfig) {\n      this.chainConfig = getChainConfig(CHAIN_NAMESPACES.SOLANA, \"0x1\");\n      const { blockExplorer, displayName, ticker, tickerName, rpcTarget, chainId } = this.chainConfig as CustomChainConfig;\n      network = { chainId, rpcTarget, blockExplorerUrl: blockExplorer, displayName, ticker, tickerName, logo: \"\" };\n    } else {\n      const { chainId, blockExplorer, displayName, rpcTarget, ticker, tickerName } = this.chainConfig as CustomChainConfig;\n      network = { chainId, rpcTarget, blockExplorerUrl: blockExplorer, displayName, tickerName, ticker, logo: \"\" };\n    }\n    this.torusInstance = new Torus(this.torusWalletOptions);\n    log.debug(\"initializing torus solana adapter init\");\n    await this.torusInstance.init({ showTorusButton: false, ...this.initParams, network });\n\n    this.solanaProvider = new TorusInjectedProvider({\n      config: {\n        chainConfig: this.chainConfig as CustomChainConfig,\n      },\n    });\n    this.status = ADAPTER_STATUS.READY;\n    this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.TORUS_SOLANA);\n\n    try {\n      log.debug(\"initializing torus solana adapter\");\n      if (options.autoConnect) {\n        this.rehydrated = true;\n        await this.connect();\n      }\n    } catch (error) {\n      log.error(\"Failed to connect with cached torus solana provider\", error);\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n    }\n  }\n\n  async connect(): Promise<SafeEventEmitterProvider | null> {\n    super.checkConnectionRequirements();\n    if (!this.torusInstance) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    if (!this.solanaProvider) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    this.status = ADAPTER_STATUS.CONNECTING;\n    this.emit(ADAPTER_EVENTS.CONNECTING, { adapter: WALLET_ADAPTERS.TORUS_SOLANA });\n    try {\n      await this.torusInstance.login(this.loginSettings);\n      try {\n        const torusInpageProvider = this.torusInstance.provider as unknown as ITorusWalletProvider;\n        torusInpageProvider.sendTransaction = this.torusInstance.sendTransaction.bind(this.torusInstance);\n        torusInpageProvider.signAllTransactions = this.torusInstance.signAllTransactions.bind(this.torusInstance);\n        torusInpageProvider.signMessage = this.torusInstance.signMessage.bind(this.torusInstance);\n        torusInpageProvider.signTransaction = this.torusInstance.signTransaction.bind(this.torusInstance);\n        await this.solanaProvider.setupProvider(torusInpageProvider);\n      } catch (error: unknown) {\n        // some issue in solana wallet, always connecting to mainnet on init.\n        // fallback to change network if not connected to correct one on login.\n        if (error instanceof Web3AuthError && error.code === 5010) {\n          const { chainId, blockExplorer, displayName, rpcTarget, ticker, tickerName } = this.chainConfig as CustomChainConfig;\n          const network = { chainId, rpcTarget, blockExplorerUrl: blockExplorer, displayName, tickerName, ticker, logo: \"\" };\n          await this.torusInstance.setProvider(network);\n        } else {\n          throw error;\n        }\n      }\n      this.status = ADAPTER_STATUS.CONNECTED;\n      this.torusInstance.showTorusButton();\n      this.emit(ADAPTER_STATUS.CONNECTED, { adapter: WALLET_ADAPTERS.TORUS_SOLANA, reconnected: this.rehydrated } as CONNECTED_EVENT_DATA);\n      return this.provider;\n    } catch (error) {\n      // ready again to be connected\n      this.status = ADAPTER_STATUS.READY;\n      this.rehydrated = false;\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n      throw WalletLoginError.connectionError(\"Failed to login with torus solana wallet\");\n    }\n  }\n\n  async disconnect(options: { cleanup: boolean } = { cleanup: false }): Promise<void> {\n    if (!this.torusInstance) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    await super.disconnect();\n    await this.torusInstance.logout();\n    if (options.cleanup) {\n      // ready to connect again\n      this.status = ADAPTER_STATUS.NOT_READY;\n      this.torusInstance = null;\n      this.solanaProvider = null;\n    } else {\n      // ready to connect again\n      this.status = ADAPTER_STATUS.READY;\n    }\n\n    this.emit(ADAPTER_EVENTS.DISCONNECTED);\n  }\n\n  async getUserInfo(): Promise<Partial<UserInfo>> {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    if (!this.torusInstance) throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n    const userInfo = await this.torusInstance.getUserInfo();\n    return userInfo;\n  }\n\n  setAdapterSettings(options: { sessionTime?: number }): void {\n    if (this.status === ADAPTER_STATUS.READY) return;\n    if (options?.sessionTime) {\n      this.sessionTime = options.sessionTime;\n    }\n  }\n}\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","'use strict';\n\nconst isStream = stream =>\n\tstream !== null &&\n\ttypeof stream === 'object' &&\n\ttypeof stream.pipe === 'function';\n\nisStream.writable = stream =>\n\tisStream(stream) &&\n\tstream.writable !== false &&\n\ttypeof stream._write === 'function' &&\n\ttypeof stream._writableState === 'object';\n\nisStream.readable = stream =>\n\tisStream(stream) &&\n\tstream.readable !== false &&\n\ttypeof stream._read === 'function' &&\n\ttypeof stream._readableState === 'object';\n\nisStream.duplex = stream =>\n\tisStream.writable(stream) &&\n\tisStream.readable(stream);\n\nisStream.transform = stream =>\n\tisStream.duplex(stream) &&\n\ttypeof stream._transform === 'function';\n\nmodule.exports = isStream;\n"],"names":["errors","disconnected","permanentlyDisconnected","unsupportedSync","method","invalidDuplexStream","invalidOptions","maxEventListeners","invalidRequestArgs","invalidRequestMethod","invalidRequestParams","invalidLoggerObject","invalidLoggerMethod","info","connected","chainId","warnings","PAYMENT_PROVIDER","MOONPAY","WYRE","RAMPNETWORK","XANPOOL","MERCURYO","TRANSAK","TORUS_BUILD_ENV","PRODUCTION","DEVELOPMENT","TESTING","BUTTON_POSITION","BOTTOM_LEFT","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","LOGIN_PROVIDER","GOOGLE","FACEBOOK","REDDIT","DISCORD","TWITCH","APPLE","LINE","GITHUB","KAKAO","LINKEDIN","TWITTER","WEIBO","WECHAT","EMAIL_PASSWORDLESS","translations","en","embed","continue","actionRequired","pendingAction","cookiesRequired","enableCookies","clickHere","de","ja","ko","zh","supportedVerifierList","api","prodTorusUrl","localStorageKey","window","location","hostname","loglevel","getLogger","createErrorMiddleware","req","res","next","error","ethErrors","rpc","invalidRequest","message","data","done","log","logStreamDisconnectWarning","remoteLabel","emitter","warningMsg","stack","warn","listenerCount","emit","getWindowId","Math","random","toString","slice","getTorusUrl","buildEnv","torusUrl","logLevel","getUserLanguage","userLanguage","navigator","language","userLanguages","split","Object","prototype","hasOwnProperty","call","config","FEATURES_PROVIDER_CHANGE_WINDOW","height","width","FEATURES_DEFAULT_WALLET_WINDOW","FEATURES_DEFAULT_POPUP_WINDOW","FEATURES_CONFIRM_WINDOW","storageAvailable","type","storage","x","setItem","removeItem","e","code","name","length","getPopupFeatures","w","h","dualScreenLeft","screenLeft","undefined","screenX","dualScreenTop","screenTop","screenY","innerWidth","document","documentElement","clientWidth","screen","innerHeight","clientHeight","systemZoom","left","abs","top","features","BaseProvider","SafeEventEmitter","constructor","connectionStream","jsonRpcStreamName","isDuplexStream","Error","messages","isTorus","setMaxListeners","_handleConnect","bind","_handleDisconnect","_handleStreamDisconnect","_rpcRequest","_initializeState","request","sendAsync","mux","ObjectMultiplex","pump","ignoreStream","jsonRpcConnection","createStreamMiddleware","stream","createStream","rpcEngine","JRPCEngine","push","createIdRemapMiddleware","createLoggerMiddleware","origin","middleware","_rpcEngine","jsonRpcConnectionEvents","events","args","Array","isArray","params","Promise","resolve","reject","getRpcPromiseCallback","send","payload","callback","streamName","handleEvent","handle","eventName","handler","handlerArgs","handlerWrapper","removeEventListener","addEventListener","documentReady","readyState","htmlToElement","html","template","createElement","trimmedHtml","trim","innerHTML","content","firstChild","PopupHandler","url","target","windowTimer","iClosedWindow","_setupTimer","Number","setInterval","closed","clearInterval","open","href","focus","close","redirect","locationReplaceOnRedirect","replace","TorusCommunicationProvider","_state","_defaultState","dappStorageKey","languageTranslations","configuration","embedTranslations","windowRefs","on","isConnected","notificationHandler","COMMUNICATION_NOTIFICATIONS","IFRAME_STATUS","isFullScreen","rid","_displayIframe","isFull","CREATE_WINDOW","windowId","_createPopupBlockAlert","CLOSE_WINDOW","_handleCloseWindow","USER_LOGGED_IN","currentLoginProvider","isLoggedIn","USER_LOGGED_OUT","isIFrameFullScreen","torusAlertContainer","torusIframe","COMMUNICATION_JRPC_METHODS","GET_PROVIDER_STATE","initialized","_handleWindow","finalUrl","URL","hash","handledWindow","OPENED_WINDOW","once","CLOSED_WINDOW","style","display","torusWidgetVisibility","buttonPosition","right","bottom","assign","hideTorusButton","showTorusButton","cb","_payload","jsonrpc","tryWindowHandle","debug","isRecoverable","errorMessage","isPermanentlyDisconnected","EthereumRpcError","logoUrl","getLogoUrl","torusAlert","successAlert","btnContainer","appendChild","bindOnLoad","remove","children","attachOnLoad","hasEmittedConnection","TorusInPageProvider","selectedAddress","_handleAccountsChanged","_handleChainChanged","_handleUnlockStateChanged","jsonRpcNotificationHandler","PROVIDER_NOTIFICATIONS","ACCOUNTS_CHANGED","UNLOCK_STATE_CHANGED","CHAIN_CHANGED","accounts","isUnlocked","PROVIDER_JRPC_METHODS","isInternal","err","result","isEthAccounts","finalAccounts","account","dequal","imgExists","img","onload","onerror","src","getSiteName","siteName","querySelector","metaTitle","title","getSiteIcon","icon","from","querySelectorAll","find","_icon","Boolean","getSiteMetadata","version","require","PROVIDER_UNSAFE_METHODS","COMMUNICATION_UNSAFE_METHODS","SET_PROVIDER","isLocalStorageAvailable","preLoadIframe","torusIframeHtml","crossOrigin","rel","relList","supports","head","Torus","modalZIndex","isInitialized","requestedLoginProvider","alertZIndex","communicationProvider","init","enableLogging","network","useLocalStorage","apiKey","extraParams","setAPIKey","enableAll","setDefaultLevel","disableAll","handleDappStorageKey","torusIframeUrl","pathname","endsWith","hashParams","URLSearchParams","append","styleLink","handleSetup","body","dappMetadata","contentWindow","postMessage","_setupWeb3","torus","login","loginProvider","provider","login_hint","loginWithPrivateKey","loginParams","privateKey","userInfo","success","logout","LOGOUT","cleanUp","clearInit","isElement","element","Element","Document","contains","setProvider","showWallet","path","instanceId","WALLET_INSTANCE_ID","finalPath","searchParams","keys","forEach","walletWindow","getUserInfo","userInfoResponse","USER_INFO","initiateTopup","topupResponse","TOPUP","getAccounts","response","sendTransaction","transaction","serialize","requireAllSignatures","signTransaction","serializeMessage","messageOnly","parsed","JSON","parse","signature","publicKey","PublicKey","Buffer","addSignature","signAllTransactions","transactions","encodedMessage","map","tx","responses","signatures","item","idx","signMessage","getGaslessPublicKey","storedKey","localStorage","getItem","generatedKey","providerParams","providerStream","BasePostMessageStream","targetWindow","communicationStream","inPageProvider","includes","detectAccountRequestPrototypeModifier","m","originalMethod","self","providerFunc","then","catch","apply","proxiedInPageProvider","Proxy","deleteProperty","proxiedCommunicationProvider","all","BaseSolanaAdapter","BaseAdapter","authenticateUser","chainConfig","WalletLoginError","notConnectedError","chainNamespace","status","ADAPTER_STATUS","CONNECTED","existingToken","getSavedToken","isExpired","checkIfTokenIsExpired","idToken","domain","uri","address","parseInt","nonce","issuedAt","Date","toISOString","challenge","signChallenge","TextEncoder","encode","signedMessage","verifySignedChallenge","bs58","sessionTime","saveToken","disconnect","disconnectionError","clearToken","SolanaWalletAdapter","WALLET_ADAPTERS","TORUS_SOLANA","ADAPTER_NAMESPACES","SOLANA","CHAIN_NAMESPACES","ADAPTER_CATEGORY","EXTERNAL","NOT_READY","torusWalletOptions","adapterSettings","initParams","loginSettings","solanaProvider","_","options","checkInitializationRequirements","getChainConfig","blockExplorer","displayName","ticker","tickerName","rpcTarget","blockExplorerUrl","logo","torusInstance","TorusInjectedProvider","READY","ADAPTER_EVENTS","autoConnect","rehydrated","connect","ERRORED","checkConnectionRequirements","WalletInitializationError","notReady","CONNECTING","adapter","torusInpageProvider","setupProvider","Web3AuthError","reconnected","connectionError","cleanup","DISCONNECTED","setAdapterSettings"],"sourceRoot":""}