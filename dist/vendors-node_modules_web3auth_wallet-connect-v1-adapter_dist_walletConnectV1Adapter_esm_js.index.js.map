{"version":3,"file":"vendors-node_modules_web3auth_wallet-connect-v1-adapter_dist_walletConnectV1Adapter_esm_js.index.js","mappings":"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","sources":["webpack://annotation/./node_modules/@web3auth/base-evm-adapter/src/baseEvmAdapter.ts","webpack://annotation/./node_modules/@web3auth/wallet-connect-v1-adapter/src/config.ts","webpack://annotation/./node_modules/@web3auth/wallet-connect-v1-adapter/src/walletConnectV1adapter.ts","webpack://annotation/../../src/index.ts"],"sourcesContent":["import {\n  ADAPTER_STATUS,\n  BaseAdapter,\n  checkIfTokenIsExpired,\n  clearToken,\n  getSavedToken,\n  saveToken,\n  signChallenge,\n  UserAuthInfo,\n  verifySignedChallenge,\n  WalletLoginError,\n} from \"@web3auth/base\";\n\nexport abstract class BaseEvmAdapter<T> extends BaseAdapter<T> {\n  async authenticateUser(): Promise<UserAuthInfo> {\n    if (!this.provider || !this.chainConfig?.chainId) throw WalletLoginError.notConnectedError();\n\n    const { chainNamespace, chainId } = this.chainConfig;\n\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n    const accounts = await this.provider.request<string[]>({\n      method: \"eth_accounts\",\n    });\n    if (accounts && accounts.length > 0) {\n      const existingToken = getSavedToken(accounts[0] as string, this.name);\n      if (existingToken) {\n        const isExpired = checkIfTokenIsExpired(existingToken);\n        if (!isExpired) {\n          return { idToken: existingToken };\n        }\n      }\n\n      const payload = {\n        domain: window.location.origin,\n        uri: window.location.href,\n        address: accounts[0],\n        chainId: parseInt(chainId, 16),\n        version: \"1\",\n        nonce: Math.random().toString(36).slice(2),\n        issuedAt: new Date().toISOString(),\n      };\n\n      const challenge = await signChallenge(payload, chainNamespace);\n\n      const signedMessage = await this.provider.request<string>({\n        method: \"personal_sign\",\n        params: [challenge, accounts[0]],\n      });\n\n      const idToken = await verifySignedChallenge(chainNamespace, signedMessage as string, challenge, this.name, this.sessionTime);\n      saveToken(accounts[0] as string, this.name, idToken);\n      return {\n        idToken,\n      };\n    }\n    throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n  }\n\n  async disconnect(): Promise<void> {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.disconnectionError(\"Not connected with wallet\");\n    const accounts = await this.provider.request<string[]>({\n      method: \"eth_accounts\",\n    });\n    if (accounts && accounts.length > 0) {\n      clearToken(accounts[0], this.name);\n    }\n  }\n}\n","import { CHAIN_NAMESPACES, IWalletConnectExtensionAdapter } from \"@web3auth/base\";\n\nexport const WALLET_CONNECT_EXTENSION_ADAPTERS: IWalletConnectExtensionAdapter[] = [\n  {\n    name: \"Rainbow\",\n    chains: [CHAIN_NAMESPACES.EIP155],\n    logo: \"https://images.web3auth.io/login-rainbow.svg\",\n    mobile: {\n      native: \"rainbow:\",\n      universal: \"https://rnbwapp.com\",\n    },\n    desktop: {\n      native: \"\",\n      universal: \"\",\n    },\n  },\n  {\n    name: \"MetaMask\",\n    chains: [CHAIN_NAMESPACES.EIP155],\n    logo: \"https://images.web3auth.io/login-metamask.svg\",\n    mobile: {\n      native: \"metamask:\",\n      universal: \"https://metamask.app.link\",\n    },\n    desktop: {\n      native: \"\",\n      universal: \"\",\n    },\n  },\n];\n","import WalletConnect from \"@walletconnect/client\";\nimport {\n  ADAPTER_CATEGORY,\n  ADAPTER_CATEGORY_TYPE,\n  ADAPTER_EVENTS,\n  ADAPTER_NAMESPACES,\n  ADAPTER_STATUS,\n  ADAPTER_STATUS_TYPE,\n  AdapterNamespaceType,\n  CHAIN_NAMESPACES,\n  ChainNamespaceType,\n  CONNECTED_EVENT_DATA,\n  CustomChainConfig,\n  getChainConfig,\n  log,\n  SafeEventEmitterProvider,\n  UserInfo,\n  WALLET_ADAPTERS,\n  WalletConnectV1Data,\n  WalletInitializationError,\n  WalletLoginError,\n  Web3AuthError,\n} from \"@web3auth/base\";\nimport { BaseEvmAdapter } from \"@web3auth/base-evm-adapter\";\nimport { WalletConnectProvider } from \"@web3auth/ethereum-provider\";\n\nimport { WALLET_CONNECT_EXTENSION_ADAPTERS } from \"./config\";\nimport { WalletConnectV1AdapterOptions } from \"./interface\";\n\nclass WalletConnectV1Adapter extends BaseEvmAdapter<void> {\n  readonly name: string = WALLET_ADAPTERS.WALLET_CONNECT_V1;\n\n  readonly adapterNamespace: AdapterNamespaceType = ADAPTER_NAMESPACES.EIP155;\n\n  readonly currentChainNamespace: ChainNamespaceType = CHAIN_NAMESPACES.EIP155;\n\n  readonly type: ADAPTER_CATEGORY_TYPE = ADAPTER_CATEGORY.EXTERNAL;\n\n  readonly adapterOptions: WalletConnectV1AdapterOptions;\n\n  public status: ADAPTER_STATUS_TYPE = ADAPTER_STATUS.NOT_READY;\n\n  public adapterData: WalletConnectV1Data = {\n    uri: \"\",\n    extensionAdapters: WALLET_CONNECT_EXTENSION_ADAPTERS,\n  };\n\n  public connector: WalletConnect | null = null;\n\n  private wcProvider: WalletConnectProvider | null = null;\n\n  private rehydrated = false;\n\n  constructor(options: WalletConnectV1AdapterOptions = {}) {\n    super();\n    this.adapterOptions = { ...options };\n    this.chainConfig = options.chainConfig || null;\n    this.sessionTime = options.sessionTime || 86400;\n  }\n\n  get connected(): boolean {\n    return !!this.connector?.connected;\n  }\n\n  get provider(): SafeEventEmitterProvider | null {\n    return this.wcProvider?.provider || null;\n  }\n\n  set provider(_: SafeEventEmitterProvider | null) {\n    throw new Error(\"Not implemented\");\n  }\n\n  async init(): Promise<void> {\n    super.checkInitializationRequirements();\n    if (!this.chainConfig) {\n      this.chainConfig = getChainConfig(CHAIN_NAMESPACES.EIP155, 1);\n    }\n    // Create a connector\n    this.connector = this.getWalletConnectInstance();\n    this.wcProvider = new WalletConnectProvider({ config: { chainConfig: this.chainConfig as CustomChainConfig }, connector: this.connector });\n\n    this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.WALLET_CONNECT_V1);\n    this.status = ADAPTER_STATUS.READY;\n    log.debug(\"initializing wallet connect v1 adapter\");\n    if (this.connector.connected) {\n      this.rehydrated = true;\n      await this.onConnectHandler({ accounts: this.connector.accounts, chainId: this.connector.chainId });\n    }\n  }\n\n  async connect(): Promise<SafeEventEmitterProvider | null> {\n    super.checkConnectionRequirements();\n    if (!this.connector) throw WalletInitializationError.notReady(\"Wallet adapter is not ready yet\");\n\n    if (this.connected) {\n      await this.onConnectHandler({ accounts: this.connector.accounts, chainId: this.connector.chainId });\n      return this.provider;\n    }\n\n    if (this.status !== ADAPTER_STATUS.CONNECTING) {\n      // for wallet connect qr code modal we have to create a new connector, coz wallet connect internally does not open\n      // modal again on existing instance if connection is pending.\n      if (this.adapterOptions.adapterSettings?.qrcodeModal) {\n        this.connector = this.getWalletConnectInstance();\n        this.wcProvider = new WalletConnectProvider({\n          config: {\n            chainConfig: this.chainConfig as CustomChainConfig,\n            // network switching can be skipped with custom ui\n            skipLookupNetwork: this.adapterOptions.adapterSettings?.skipNetworkSwitching,\n          },\n          connector: this.connector,\n        });\n      }\n      await this.createNewSession();\n      this.status = ADAPTER_STATUS.CONNECTING;\n      this.emit(ADAPTER_EVENTS.CONNECTING, { adapter: WALLET_ADAPTERS.WALLET_CONNECT_V1 });\n    }\n    return new Promise((resolve, reject) => {\n      if (!this.connector) return reject(WalletInitializationError.notReady(\"Wallet adapter is not ready yet\"));\n      // for wallet connect default modal.\n      this.connector.on(\"modal_closed\", async () => {\n        this.status = ADAPTER_STATUS.READY;\n        this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.WALLET_CONNECT_V1);\n        return reject(new Error(\"User closed modal\"));\n      });\n      try {\n        // Subscribe to session connection\n        this.connector.on(\"connect\", async (error: Error | null, payload: { params: { accounts: string[]; chainId: number }[] }) => {\n          if (error) {\n            this.emit(ADAPTER_EVENTS.ERRORED, error);\n          }\n          log.debug(\"connected event emitted by web3auth\");\n          await this.onConnectHandler(payload.params[0]);\n          return resolve(this.provider);\n        });\n      } catch (error: unknown) {\n        log.error(\"Wallet connect v1 adapter error while connecting\", error);\n        // ready again to be connected\n        this.status = ADAPTER_STATUS.READY;\n        this.rehydrated = true;\n        this.emit(ADAPTER_EVENTS.ERRORED, error);\n        reject(\n          error instanceof Web3AuthError\n            ? error\n            : WalletLoginError.connectionError(`Failed to login with wallet connect: ${(error as Error)?.message || \"\"}`)\n        );\n      }\n    });\n  }\n\n  setAdapterSettings(options: { sessionTime?: number }): void {\n    if (this.status === ADAPTER_STATUS.READY) return;\n    if (options?.sessionTime) {\n      this.sessionTime = options.sessionTime;\n    }\n  }\n\n  async getUserInfo(): Promise<Partial<UserInfo>> {\n    if (!this.connected) throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n    return {};\n  }\n\n  async disconnect(options: { cleanup: boolean } = { cleanup: false }): Promise<void> {\n    const { cleanup } = options;\n    if (!this.connector || !this.connected) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    await super.disconnect();\n    await this.connector.killSession();\n    this.rehydrated = false;\n    if (cleanup) {\n      this.connector = null;\n      this.status = ADAPTER_STATUS.NOT_READY;\n      this.wcProvider = null;\n    } else {\n      // ready to connect again\n      this.status = ADAPTER_STATUS.READY;\n    }\n    this.emit(ADAPTER_EVENTS.DISCONNECTED);\n  }\n\n  private async addChain(chainConfig: CustomChainConfig): Promise<void> {\n    try {\n      if (!this.wcProvider) throw WalletInitializationError.notReady(\"Wallet adapter is not ready yet\");\n      const networkSwitch = this.adapterOptions.adapterSettings?.networkSwitchModal;\n      if (networkSwitch) {\n        await networkSwitch.addNetwork({ chainConfig, appOrigin: window.location.hostname });\n      }\n      await this.wcProvider.addChain(chainConfig);\n    } catch (error) {\n      log.error(error);\n    }\n  }\n\n  private async switchChain(connectedChainConfig: Partial<CustomChainConfig>, chainConfig: CustomChainConfig): Promise<void> {\n    if (!this.wcProvider) throw WalletInitializationError.notReady(\"Wallet adapter is not ready yet\");\n    const networkSwitch = this.adapterOptions.adapterSettings?.networkSwitchModal;\n\n    if (networkSwitch) {\n      await networkSwitch.switchNetwork({\n        currentChainConfig: chainConfig,\n        newChainConfig: connectedChainConfig,\n        appOrigin: window.location.hostname,\n      });\n    }\n    await this.wcProvider.switchChain({ chainId: chainConfig.chainId, lookup: false, addChain: false });\n  }\n\n  private async createNewSession(opts: { forceNewSession: boolean } = { forceNewSession: false }): Promise<void> {\n    if (!this.connector) throw WalletInitializationError.notReady(\"Wallet adapter is not ready yet\");\n    if (opts.forceNewSession && this.connector.pending) {\n      await this.connector.killSession();\n    }\n    // for wallet connect qr modal\n    if (this.adapterOptions?.adapterSettings?.qrcodeModal) {\n      await this.connector.createSession({ chainId: parseInt(this.chainConfig?.chainId || \"0x1\", 16) });\n      return;\n    }\n\n    // for web3auth qr code modal\n    return new Promise<void>((resolve, reject) => {\n      if (!this.connector) return reject(WalletInitializationError.notReady(\"Wallet adapter is not ready yet\"));\n      log.debug(\"creating new session for web3auth wallet connect\");\n      this.connector.on(\"display_uri\", async (err, payload) => {\n        if (err) {\n          this.emit(ADAPTER_EVENTS.ERRORED, WalletLoginError.connectionError(\"Failed to display wallet connect qr code\"));\n          return reject(err);\n        }\n        const uri = payload.params[0];\n        this.updateAdapterData({ uri, extensionAdapters: WALLET_CONNECT_EXTENSION_ADAPTERS } as WalletConnectV1Data);\n\n        this.connector?.off(\"display_uri\");\n        return resolve();\n      });\n\n      this.connector.createSession({ chainId: parseInt(this.chainConfig?.chainId || \"0x1\", 16) }).catch((error) => {\n        log.error(\"error while creating new wallet connect session\", error);\n        this.emit(ADAPTER_EVENTS.ERRORED, error);\n        return reject(error);\n      });\n    });\n  }\n\n  private async onConnectHandler(params: { accounts: string[]; chainId: number }) {\n    if (!this.connector || !this.wcProvider) throw WalletInitializationError.notReady(\"Wallet adapter is not ready yet\");\n    if (!this.chainConfig) throw WalletInitializationError.invalidParams(\"Chain config is not set\");\n\n    const { chainId } = params;\n    log.debug(\"connected chainId in hex\");\n    if (chainId !== parseInt(this.chainConfig.chainId, 16)) {\n      const connectedChainConfig = getChainConfig(CHAIN_NAMESPACES.EIP155, chainId) || {\n        chainId: `0x${chainId.toString(16)}`,\n        displayName: \"Unknown Network\",\n      };\n\n      const isCustomUi = this.adapterOptions.adapterSettings?.qrcodeModal;\n      // skipping network is not allowed in default ui. We are use network switching modal for default ui.\n      if (!isCustomUi || (isCustomUi && !this.adapterOptions?.adapterSettings?.skipNetworkSwitching)) {\n        try {\n          await this.addChain(this.chainConfig);\n          await this.switchChain(connectedChainConfig, this.chainConfig);\n          this.connector = this.getWalletConnectInstance();\n        } catch (error) {\n          log.error(\"error while chain switching\", error);\n          // we need to create a new session since old session is already used and\n          // user needs to login again with correct chain with new qr code.\n          await this.createNewSession({ forceNewSession: true });\n          this.emit(\n            ADAPTER_EVENTS.ERRORED,\n            WalletInitializationError.fromCode(\n              5000,\n              `Not connected to correct network. Expected: ${this.chainConfig.displayName}, Current: ${\n                connectedChainConfig?.displayName || chainId\n              }, Please switch to correct network from wallet`\n            )\n          );\n          this.status = ADAPTER_STATUS.READY;\n          this.rehydrated = true;\n          return;\n        }\n      }\n    }\n    await this.wcProvider.setupProvider(this.connector);\n    this.subscribeEvents(this.connector);\n    this.status = ADAPTER_STATUS.CONNECTED;\n    this.emit(ADAPTER_EVENTS.CONNECTED, { adapter: WALLET_ADAPTERS.WALLET_CONNECT_V1, reconnected: this.rehydrated } as CONNECTED_EVENT_DATA);\n  }\n\n  private subscribeEvents(connector: WalletConnect): void {\n    connector.on(\"session_update\", async (error: Error | null) => {\n      if (error) {\n        this.emit(ADAPTER_EVENTS.ERRORED, error);\n      }\n    });\n  }\n\n  private getWalletConnectInstance(): WalletConnect {\n    const walletConnectOptions = this.adapterOptions.adapterSettings || {};\n    walletConnectOptions.bridge = walletConnectOptions.bridge || \"https://bridge.walletconnect.org\";\n    // Create a connector\n    return new WalletConnect(walletConnectOptions);\n  }\n}\n\nexport { WalletConnectV1Adapter };\n"],"names":["BaseEvmAdapter","BaseAdapter","authenticateUser","provider","chainConfig","chainId","WalletLoginError","notConnectedError","chainNamespace","status","ADAPTER_STATUS","CONNECTED","accounts","request","method","length","existingToken","getSavedToken","name","isExpired","checkIfTokenIsExpired","idToken","payload","domain","window","location","origin","uri","href","address","parseInt","version","nonce","Math","random","toString","slice","issuedAt","Date","toISOString","challenge","signChallenge","signedMessage","params","verifySignedChallenge","sessionTime","saveToken","disconnect","disconnectionError","clearToken","WALLET_CONNECT_EXTENSION_ADAPTERS","chains","CHAIN_NAMESPACES","EIP155","logo","mobile","native","universal","desktop","WalletConnectV1Adapter","constructor","options","WALLET_ADAPTERS","WALLET_CONNECT_V1","ADAPTER_NAMESPACES","ADAPTER_CATEGORY","EXTERNAL","NOT_READY","extensionAdapters","adapterOptions","connected","connector","wcProvider","_","Error","init","checkInitializationRequirements","getChainConfig","getWalletConnectInstance","WalletConnectProvider","config","emit","ADAPTER_EVENTS","READY","log","debug","rehydrated","onConnectHandler","connect","checkConnectionRequirements","WalletInitializationError","notReady","CONNECTING","adapterSettings","qrcodeModal","skipLookupNetwork","skipNetworkSwitching","createNewSession","adapter","Promise","resolve","reject","on","error","ERRORED","Web3AuthError","connectionError","message","setAdapterSettings","getUserInfo","cleanup","killSession","DISCONNECTED","addChain","networkSwitch","networkSwitchModal","addNetwork","appOrigin","hostname","switchChain","connectedChainConfig","switchNetwork","currentChainConfig","newChainConfig","lookup","opts","forceNewSession","pending","createSession","err","updateAdapterData","off","catch","invalidParams","displayName","isCustomUi","fromCode","setupProvider","subscribeEvents","reconnected","walletConnectOptions","bridge","WalletConnect"],"sourceRoot":""}